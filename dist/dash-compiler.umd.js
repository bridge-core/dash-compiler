(function(j,P){typeof exports=="object"&&typeof module!="undefined"?P(exports,require("@bridge-editor/mc-project-core"),require("pathe"),require("@bridge-editor/molang"),require("@bridge-editor/common-utils"),require("json5"),require("@swc/wasm-web"),require("@bridge-editor/js-runtime"),require("is-glob")):typeof define=="function"&&define.amd?define(["exports","@bridge-editor/mc-project-core","pathe","@bridge-editor/molang","@bridge-editor/common-utils","json5","@swc/wasm-web","@bridge-editor/js-runtime","is-glob"],P):(j=typeof globalThis!="undefined"?globalThis:j||self,P(j.DashCompiler={},j.mcProjectCore,j.pathe,j.molang,j.commonUtils,j.json5,j.initSwc,j.jsRuntime,j.isGlob))})(this,function(j,P,_,E,I,ie,J,N,re){"use strict";function x(n){return n&&typeof n=="object"&&"default"in n?n:{default:n}}var H=x(ie),ne=x(J),oe=x(re);class ae extends P.ProjectConfig{constructor(e,t){super(_.dirname(t)),this.fileSystem=e,this.configPath=t}readConfig(){return this.fileSystem.readJson(this.configPath)}writeConfig(e){return this.fileSystem.writeJson(this.configPath,e)}}class le{constructor(e,t,s){this.dash=e,this.pluginId=t,this.plugin=s}implementsHook(e){return typeof this.plugin[e]=="function"}async runBuildStartHook(){var e,t;try{return await((t=(e=this.plugin).buildStart)==null?void 0:t.call(e))}catch(s){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "buildStart" hook:`,s)}}async runIncludeHook(){var e,t;try{return await((t=(e=this.plugin).include)==null?void 0:t.call(e))}catch(s){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "include" hook:`,s)}}async runIgnoreHook(e){var t,s;try{return await((s=(t=this.plugin).ignore)==null?void 0:s.call(t,e))}catch(i){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "ignore" hook for "${e}":`,i)}}async runTransformPathHook(e){var t,s;try{return await((s=(t=this.plugin).transformPath)==null?void 0:s.call(t,e))}catch(i){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "transformPath" hook for "${e}":`,i)}}async runReadHook(e,t){var s,i;try{return await((i=(s=this.plugin).read)==null?void 0:i.call(s,e,t))}catch(r){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "read" hook for "${e}":`,r)}}async runLoadHook(e,t){var s,i;try{return await((i=(s=this.plugin).load)==null?void 0:i.call(s,e,t))}catch(r){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "load" hook for "${e}":`,r)}}async runRegisterAliasesHook(e,t){var s,i;try{return await((i=(s=this.plugin).registerAliases)==null?void 0:i.call(s,e,t))}catch(r){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "registerAliases" hook for "${e}":`,r)}}async runRequireHook(e,t){var s,i;try{return await((i=(s=this.plugin).require)==null?void 0:i.call(s,e,t))}catch(r){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "require" hook for "${e}":`,r)}}async runTransformHook(e,t,s){var i,r;try{return await((r=(i=this.plugin).transform)==null?void 0:r.call(i,e,t,s))}catch(o){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "transform" hook for "${e}":`,o)}}async runFinalizeBuildHook(e,t){var s,i;try{return await((i=(s=this.plugin).finalizeBuild)==null?void 0:i.call(s,e,t))}catch(r){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "finalizeBuild" hook for "${e}":`,r)}}async runBuildEndHook(){var e,t;try{return await((t=(e=this.plugin).buildEnd)==null?void 0:t.call(e))}catch(s){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "buildEnd" hook:`,s)}}async runBeforeFileUnlinked(e){var t,s;try{return await((s=(t=this.plugin).beforeFileUnlinked)==null?void 0:s.call(t,e))}catch(i){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "beforeFileUnlinked" hook for "${e}":`,i)}}}const ce=({options:n,outputFileSystem:e,hasComMojangDirectory:t,projectConfig:s,projectRoot:i,packType:r})=>{var l;n.buildName||(n.buildName=n.mode==="development"?"dev":"dist"),n.packName||(n.packName="Bridge"),(l=n.rewriteToComMojang)==null||l||(t=!1);const o={behaviorPack:"development_behavior_packs",resourcePack:"development_resource_packs",skinPack:"skin_packs",worldTemplate:"minecraftWorlds"},a=m=>t&&n.mode==="development"?`${o[m]}`:`${i}/builds/${n.buildName}`,c=(m,g)=>`${a(m)}/${n.packName} ${g}`;return{async buildStart(){if(n.mode==="production"||n.buildType==="fullBuild")if(t)for(const m in o){const g=r.getFromId(m);!g||await e.unlink(c(m,g.defaultPackPath)).catch(()=>{})}else await e.unlink(a("BP")).catch(()=>{})},transformPath(m){var b,p;if(!m||m.includes("BP/scripts/gametests/")&&n.mode==="production")return;const g=r==null?void 0:r.get(m);if(!g)return;const d=s.getAbsolutePackRoot(g.id),w=_.relative(d,m);if(["behaviorPack","resourcePack","skinPack","worldTemplate"].includes(g.id))return _.join(c(g.id,(p=(b=n.packNameSuffix)==null?void 0:b[g.id])!=null?p:g.defaultPackPath),w)}}},z=async({fileType:n,projectConfig:e,requestJsonData:t,options:s,console:i,jsRuntime:r})=>{const o=(p,k)=>e.resolvePackPath(p,k),a=new E.CustomMolang({}),c=[e.resolvePackPath("behaviorPack","molang"),e.resolvePackPath("resourcePack","molang")],l=p=>p&&c.some(k=>p.startsWith(`${k}/`))&&p.endsWith(".molang"),m=e.resolvePackPath("behaviorPack","scripts/molang"),g=p=>p==null?void 0:p.startsWith(`${m}/`),d=new Map,w=p=>{if(d.has(p))return d.get(p);const k=s.include[n.getId(p)];return d.set(p,k),k};let b=[];return{async buildStart(){s.include=Object.assign(await t("data/packages/minecraftBedrock/location/validMolang.json"),s.include),d.clear()},ignore(p){return!l(p)&&!g(p)&&!w(p)},transformPath(p){if(l(p)||g(p))return null},async read(p,k){if((l(p)||g(p))&&k){const v=await k.getFile();return await(v==null?void 0:v.text())}else if(w(p)&&p.endsWith(".json")&&k){const v=await k.getFile();if(!v)return;try{return H.default.parse(await v.text())}catch($){return s.buildType!=="fileRequest"&&i.error(`Error within file "${p}": ${$}`),{__error__:`Failed to load original file: ${$}`}}}},async load(p,k){if(l(p)&&k)a.parse(k);else if(g(p)){const v=await r.run(p,{console:i},k).catch($=>(i.error(`Failed to execute Molang AST script "${p}": ${$}`),null));if(!v)return null;typeof v.__default__=="function"&&b.push(v.__default__)}},async require(p){if(w(p))return[o("behaviorPack","scripts/molang/**/*.[jt]s"),o("behaviorPack","molang/**/*.molang"),o("resourcePack","molang/**/*.molang")]},async transform(p,k){const v=w(p);v&&v.length>0&&v.forEach($=>I.setObjectAt($,k,S=>{if(typeof S!="string"||S[0]==="/"||S[0]==="@")return S;if(b.length>0){let f=null;try{f=a.parse(S)}catch(F){s.buildType!=="fileRequest"&&i.error(`Error within file "${p}"; script "${S}": ${F}`)}if(f){for(const F of b)f=f.walk(F);S=f.toString()}}try{return a.transform(S)}catch(f){return s.buildType!=="fileRequest"&&i.error(`Error within file "${p}"; script "${S}": ${f}`),S}}))},finalizeBuild(p,k){if(w(p)&&typeof k!="string")return JSON.stringify(k,null,"	")},buildEnd(){b=[]}}},de=({fileType:n})=>({ignore(e){return(n==null?void 0:n.getId(e))!=="entity"},registerAliases(e,t){var s,i,r,o;if((n==null?void 0:n.getId(e))==="entity"&&((i=(s=t==null?void 0:t["minecraft:entity"])==null?void 0:s.description)==null?void 0:i.identifier))return[(o=(r=t==null?void 0:t["minecraft:entity"])==null?void 0:r.description)==null?void 0:o.identifier]}});function ue(n,e){const t=U(n),s=U(e),i=t.pop(),r=s.pop(),o=L(t,s);return o!==0?o:i&&r?L(i.split("."),r.split(".")):i||r?i?-1:1:0}const he=(n,e,t)=>{ge(t);const s=ue(n,e);return K[t].includes(s)},me=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i,U=n=>{if(typeof n!="string")throw new TypeError("Invalid argument expected string");const e=n.match(me);if(!e)throw new Error(`Invalid argument not valid semver ('${n}' received)`);return e.shift(),e},V=n=>n==="*"||n==="x"||n==="X",G=n=>{const e=parseInt(n,10);return isNaN(e)?n:e},fe=(n,e)=>typeof n!=typeof e?[String(n),String(e)]:[n,e],pe=(n,e)=>{if(V(n)||V(e))return 0;const[t,s]=fe(G(n),G(e));return t>s?1:t<s?-1:0},L=(n,e)=>{for(let t=0;t<Math.max(n.length,e.length);t++){const s=pe(n[t]||0,e[t]||0);if(s!==0)return s}return 0},K={">":[1],">=":[0,1],"=":[0],"<=":[-1,0],"<":[-1]},X=Object.keys(K),ge=n=>{if(typeof n!="string")throw new TypeError(`Invalid operator type, expected string but got ${typeof n}`);if(X.indexOf(n)===-1)throw new Error(`Invalid operator, expected one of ${X.join("|")}`)},ye=(n,e)=>({register:t=>{var s;((s=t.type)!=null?s:"entity")===e&&(n.component=({name:i,schema:r,template:o})=>{const a=new t;i(t.component_name),r(R(Object.values(a.onPropose())[0])),o((c,{create:l})=>{l(a.onApply(c,"components")[`minecraft:${e}`])})})}});function R(n){const e={},t=Object.keys(n);if(t.length===1&&t[0].startsWith("$dynamic.list."))return{type:"array",items:R(Object.values(n)[0])};for(const[s,i]of Object.entries(n))s.startsWith("$")||(typeof i=="string"?e[s]=we(i):Array.isArray(i)?e[s]={enum:i}:i==="object"&&(e[s]=R(i)));return{type:"object",properties:e}}function we(n){switch(n){case"$general.boolean":return{type:"boolean"};case"$general.number":return{type:"integer"};case"$general.decimal":return{type:"number"};default:return{type:["number","integer","string","boolean","object","array"]}}}class Q{constructor(e,t,s,i,r,o){this.console=e,this.fileType=t,this.componentSrc=s,this.mode=i,this.v1Compat=r,this.targetVersion=o,this.animations=[],this.animationControllers=[],this.createOnPlayer=[],this.dialogueScenes={},this.serverFiles=[],this.clientFiles={},this.lifecycleHookCount={activated:0,deactivated:0}}setProjectConfig(e){this.projectConfig=e}get name(){return this._name}async load(e,t,s){let i={component:null};const r=await e.run(t,{defineComponent:l=>l,console:this.console,Bridge:this.v1Compat?ye(i,this.fileType):void 0}).catch(l=>(this.console.error(`Failed to execute component "${t}": ${l}`),null));if(!r)return!1;if(typeof r.__default__!="function")if(i.component)r.__default__=i.component;else return this.console.error(`Component ${t} is not a valid component. Expected a function as the default export.`),!1;const o=l=>this._name=l;let a=l=>this.schema=l,c=()=>{};return(!s||s==="server")&&(a=()=>{},c=l=>{this.template=(m,g)=>{try{l(m,g)}catch(d){this.console.log(l.toString()),this.console.error(d)}}}),await r.__default__({name:o,schema:a,template:c}),!0}reset(){this.fileType!=="item"&&(this.animations=[],this.animationControllers=[]),this.clientFiles={},this.serverFiles=[]}getSchema(){return this.schema}toString(){return this.componentSrc}create(e,t,s=`minecraft:${this.fileType}`,i){var c;const r=s.split("/"),o=r.pop(),a=this.getObjAtLocation(e,[...r]);a[o]=(i?(l,m)=>i(I.deepMerge,l,m):I.deepMerge)((c=a[o])!=null?c:{},t!=null?t:{})}getObjAtLocation(e,t){let s=e;for(;t.length>0;){const i=t.shift();s[i]===void 0?s[Number(i)]!==void 0?s=s[Number(i)]:(s[i]={},s=s[i]):s=s[i]}return s}async processTemplates(e,t,s){var v,$,S,f,F,u;if(typeof this.template!="function")return;const i=(S=($=(v=e[`minecraft:${this.fileType}`])==null?void 0:v.description)==null?void 0:$.identifier)!=null?S:"bridge:no_identifier",r=await I.hashString(`${this.name}/${i}`),o=(u=(F=(f=this.projectConfig)==null?void 0:f.get())==null?void 0:F.namespace)!=null?u:"bridge";let a;if(o.includes("_")){const h=o.split("_")[0],y=o.split("_").slice(1).join("_");a=`${h}/${y}`}else a="bridge";const c=(h,y)=>(this.animations.push([h,y]),this.getShortAnimName("a",r,this.animations.length-1)),l=(h,y)=>(this.animationControllers.push([h,y]),this.getShortAnimName("ac",r,this.animationControllers.length-1)),m=h=>{const y=`loot_tables/${a}/${this.getShortAnimName("lt",r,this.serverFiles.length)}.json`;return this.serverFiles.push([y,h]),y},g=h=>{const y=`trading/${a}/${this.getShortAnimName("tt",r,this.serverFiles.length)}.json`;return this.serverFiles.push([y,h]),y},d=h=>{this.serverFiles.push([`recipes/${a}/${this.getShortAnimName("recipe",r,this.serverFiles.length)}.json`,h])},w=h=>{this.serverFiles.push([`spawn_rules/${a}/${this.getShortAnimName("sr",r,this.serverFiles.length)}.json`,h])},b=(await I.hashString(`${this.name}/${s}`)).slice(0,16),p=h=>this.registerLifecycleHook(e,s,h,b,"activated"),k=h=>this.registerLifecycleHook(e,s,h,b,"deactivated");this.fileType==="entity"?this.template(t!=null?t:{},{mode:this.mode,compilerMode:this.mode,sourceEntity:()=>JSON.parse(JSON.stringify(e)),create:(h,y,C)=>this.create(e,h,y,C),location:s,identifier:i,projectNamespace:o,animationController:l,animation:c,lootTable:m,tradeTable:g,spawnRule:w,dialogueScene:!this.targetVersion||he(this.targetVersion,"1.17.10",">=")?(h,y=!0)=>{this.dialogueScenes[r]||(this.dialogueScenes[r]=[]),this.dialogueScenes[r].push(h),h.scene_tag&&y&&p({run_command:{command:[`/dialogue open @s @p ${h.scene_tag}`]}})}:void 0,onActivated:p,onDeactivated:k,client:{create:(h,y="1.10.0")=>{this.clientFiles[`entity/${a}/${r}.json`]={format_version:y,"minecraft:client_entity":Object.assign({description:{identifier:i}},h)}}}}):this.fileType==="item"?this.template(t!=null?t:{},{mode:this.mode,compilerMode:this.mode,sourceItem:()=>JSON.parse(JSON.stringify(e)),create:(h,y,C)=>this.create(e,h,y,C),location:s,identifier:i,projectNamespace:o,lootTable:m,recipe:d,player:{animationController:l,animation:c,create:(h,y,C)=>{this.createOnPlayer.push([y!=null?y:"minecraft:entity",h,C])}}}):this.fileType==="block"&&this.template(t!=null?t:{},{mode:this.mode,compilerMode:this.mode,sourceBlock:()=>JSON.parse(JSON.stringify(e)),create:(h,y,C)=>this.create(e,h,y,C),lootTable:m,recipe:d,location:s,identifier:i,projectNamespace:o})}async processAdditionalFiles(e,t,s=!1){var w,b,p,k,v,$,S,f,F;const i=(b=(w=this.projectConfig)==null?void 0:w.getRelativePackRoot("behaviorPack"))!=null?b:"BP",r=(p=this.projectConfig)==null?void 0:p.getRelativePackRoot("resourcePack"),o=s?"minecraft:player":($=(v=(k=t[`minecraft:${this.fileType}`])==null?void 0:k.description)==null?void 0:v.identifier)!=null?$:"bridge:no_identifier",a=(F=(f=(S=this.projectConfig)==null?void 0:S.get())==null?void 0:f.namespace)!=null?F:"bridge";let c;if(a.includes("_")){const u=a.split("_")[0],h=a.split("_").slice(1).join("_");c=`${u}/${h}`}else c="bridge";const l=(await I.hashString(`${this.name}/${o}`)).slice(0,25),m=`${i}/animations/${c}/${l}.json`,g=`${i}/animation_controllers/${c}/${l}.json`;o==="minecraft:player"&&this.createOnPlayer.forEach(([u,h,y])=>{this.create(t,h,u,y)}),r||(this.clientFiles={},this.console.error(`[${this.name}] Dash was unable to load the root of your resource pack and therefore cannot generate client files for this component.`));let d={};return(this.fileType!=="item"||o==="minecraft:player")&&(d={[m]:{baseFile:e,fileContent:this.createAnimations(l,t)},[g]:{baseFile:e,fileContent:this.createAnimationControllers(l,t)}}),{...d,[_.join(i,`dialogue/${c}/${l}.json`)]:this.dialogueScenes[l]&&this.dialogueScenes[l].length>0?{baseFile:e,fileContent:JSON.stringify({format_version:this.targetVersion,"minecraft:npc_dialogue":{scenes:this.dialogueScenes[l]}},null,"	")}:void 0,...Object.fromEntries(this.serverFiles.map(([u,h])=>[_.join(i,u),{baseFile:e,fileContent:JSON.stringify(h,null,"	")}])),...Object.fromEntries(Object.entries(this.clientFiles).map(([u,h])=>[_.join(r,u),{baseFile:e,fileContent:JSON.stringify(h,null,"	")}]))}}createAnimations(e,t){var o,a,c;if(this.animations.length===0)return;const s=(c=(a=(o=this.projectConfig)==null?void 0:o.get())==null?void 0:a.namespace)!=null?c:"bridge";let i=0;const r={format_version:"1.10.0",animations:{}};for(const[l,m]of this.animations){if(!l){i++;continue}const g=this.getAnimName("animation",s,e,i),d=this.getShortAnimName("a",e,i);r.animations[g]=l,this.create(t,{animations:{[d]:g}},"minecraft:entity/description"),m!==!1&&this.create(t,{scripts:{animate:[m?{[d]:m}:d]}},"minecraft:entity/description"),i++}return JSON.stringify(r,null,"	")}createAnimationControllers(e,t){var o,a,c;if(this.animationControllers.length===0)return;const s=(c=(a=(o=this.projectConfig)==null?void 0:o.get())==null?void 0:a.namespace)!=null?c:"bridge";let i=0;const r={format_version:"1.10.0",animation_controllers:{}};for(const[l,m]of this.animationControllers){if(!l){i++;continue}const g=this.getAnimName("controller.animation",s,e,i),d=this.getShortAnimName("ac",e,i);r.animation_controllers[g]=l,this.create(t,{animations:{[d]:g}},"minecraft:entity/description"),m!==!1&&this.create(t,{scripts:{animate:[m?{[d]:m}:d]}},"minecraft:entity/description"),i++}return JSON.stringify(r,null,"	")}getAnimName(e,t,s,i){return`${e}.${t}.${s}_${i}`}getShortAnimName(e,t,s){var i;return`${(i=t.slice(0,16))!=null?i:"bridge_auto"}_${e}_${s}`}registerLifecycleHook(e,t,s,i,r){e[`minecraft:${this.fileType}`].events||(e[`minecraft:${this.fileType}`].events={});const o=e[`minecraft:${this.fileType}`].events;if(r==="activated"&&t===`minecraft:${this.fileType}/components`)o["minecraft:entity_spawned"]||(o["minecraft:entity_spawned"]={}),this.addEventReponse(o["minecraft:entity_spawned"],s);else if(this.fileType==="entity"&&t.startsWith(`minecraft:${this.fileType}/component_groups/`)){const a=t.split("/").pop();this.findComponentGroupReferences(o,r==="activated"?"add":"remove",a).forEach(l=>this.addEventReponse(l,s))}else if(t.startsWith(`minecraft:${this.fileType}/permutations/`)){const a=t.split("/");if(a.pop()!=="components")throw new Error("Invalid component location inside of permutation");const c=this.getObjAtLocation(e,[...a]),l=`bridge:${i}_${r}_${r==="activated"?this.lifecycleHookCount.activated++:this.lifecycleHookCount.deactivated++}`;c.condition&&this.animationControllers.push([{states:{default:{on_entry:[`@s ${l}`]}}},r==="activated"?c.condition:`!(${c.condition})`]),o[l]=s}}addEventReponse(e,t){if(Array.isArray(e.sequence))e.sequence.push(t);else if(Object.keys(e).length===0)Object.assign(e,t);else{let s=Object.assign({},e,{filters:void 0});for(const i in e)i!=="filters"&&(e[i]=void 0);e.sequence=[s,t]}}findComponentGroupReferences(e,t,s){var r,o;let i=[];for(const a in e){const c=e[a];Array.isArray(c.sequence)?i.push(...this.findComponentGroupReferences(c.sequence,t,s)):Array.isArray(c.randomize)?i.push(...this.findComponentGroupReferences(c.randomize,t,s)):((o=(r=c[t])==null?void 0:r.component_groups)!=null?o:[]).includes(s)&&i.push(c)}return i}}function Fe(n){const e=[];for(const[t,s]of n)e.push(...ke(s,t));return e}function ke(n,e){const t=[];for(const s in n)s.startsWith("minecraft:")||s.startsWith("tag:")||t.push([s,e]);return t}function B({fileType:n,getComponentObjects:e}){const t=new Map;let s={};return({console:i,projectConfig:r,projectRoot:o,compileFiles:a,getAliases:c,getAliasesWhere:l,options:m,jsRuntime:g,targetVersion:d,fileType:w,fileSystem:b})=>{let p=null;const k=(u,h)=>{if(!u)return!1;if(p&&u===p)return!0;const y=n==="item"&&(w==null?void 0:w.getId(u))==="entity"&&h(u).includes("minecraft:player");return y&&(p=u),y},v=new Map,$=u=>{if(!u)return!1;if(v.has(u))return v.get(u);const h=m.v1CompatMode?u.includes("/components/"):(w==null?void 0:w.getId(u))==="customComponent"&&u.includes(`/${n}/`);return v.set(u,h),h},S=new Map,f=u=>{if(!u)return!1;if(S.has(u))return S.get(u);const h=(w==null?void 0:w.getId(u))===n;return S.set(u,h),h};let F=!1;return{async buildStart(){var u,h;t.clear(),v.clear(),S.clear(),p=null,s={},F=(await b.allFiles(`${o}${(h=(u=r.get().packs)==null?void 0:u.behaviorPack)==null?void 0:h.substring(1)}/components`).catch(()=>[])).length>0},ignore(u){return!s[u]&&!$(u)&&!f(u)&&!(n==="item"&&w.getId(u)==="entity")},transformPath(u){if($(u)&&m.buildType!=="fileRequest")return null},async read(u,h){if(!h)return s[u]?H.default.parse(s[u].fileContent):void 0;if($(u)){F=!0;const y=await h.getFile();return await(y==null?void 0:y.text())}else if(f(u)||k(u,c)){const y=await h.getFile();if(!y)return;try{return H.default.parse(await y.text())}catch(C){return m.buildType!=="fileRequest"&&i.error(`Error within file "${u}": ${C}`),{__error__:`Failed to load original file: ${C}`}}}},async load(u,h){if(!!F&&$(u)&&typeof h=="string"){const y=new Q(i,n,h,m.mode,!!m.v1CompatMode,d);return y.setProjectConfig(r),await y.load(g,u)?y:h}},async registerAliases(u,h){if(!!F&&$(u))return[`${n}Component#${h.name}`]},async require(u,h){if(!!F){if(k(u,c))return l(y=>y.startsWith("itemComponent#"));if(f(u)){const y=Fe(e(h));return t.set(u,y),y.map(C=>`${n}Component#${C[0]}`)}else if(s[u])return[s[u].baseFile]}},async transform(u,h,y={}){var C;if(!!F){if(k(u,c)){const M=Object.entries(y).filter(([A])=>A.startsWith("itemComponent#")).map(([A,O])=>O);for(const A of M){if(!A)return;s=I.deepMerge(s,await A.processAdditionalFiles(u,h,!0))}}else if(f(u)){const M=new Set;for(const[A,O]of(C=t.get(u))!=null?C:[]){const T=y[`${n}Component#${A}`];if(!T)continue;const se=I.get(h,O.split("/"),{}),Ue=se[A];delete se[A],await T.processTemplates(h,Ue,O),M.add(T)}for(const A of M)s=I.deepMerge(s,await A.processAdditionalFiles(u,h));for(const A of M)A.reset()}}},finalizeBuild(u,h){if(!!F){if($(u)&&h)return h.toString();if(f(u)||s[u])return JSON.stringify(h,null,"	")}},async buildEnd(){if(!F||m.buildType==="fileRequest")return;s=Object.fromEntries(Object.entries(s).filter(([h,y])=>(y==null?void 0:y.fileContent)!==void 0).map(([h,y])=>[_.join(o,h),y]));const u=Object.keys(s);u.length>0&&await a(u),s={}}}}}const ve=B({fileType:"entity",getComponentObjects:n=>{var e,t,s,i,r,o;return[["minecraft:entity/components",(t=(e=n==null?void 0:n["minecraft:entity"])==null?void 0:e.components)!=null?t:{}],...Object.entries((i=(s=n==null?void 0:n["minecraft:entity"])==null?void 0:s.component_groups)!=null?i:{}).map(([a,c])=>[`minecraft:entity/component_groups/${a}`,c]),...((o=(r=n==null?void 0:n["minecraft:entity"])==null?void 0:r.permutations)!=null?o:[]).map((a,c)=>{var l;return[`minecraft:entity/permutations/${c}/components`,(l=a==null?void 0:a.components)!=null?l:{}]})]}}),be=B({fileType:"item",getComponentObjects:n=>{var e,t;return[["minecraft:item/components",(t=(e=n==null?void 0:n["minecraft:item"])==null?void 0:e.components)!=null?t:{}]]}}),$e=B({fileType:"block",getComponentObjects:n=>{var e,t,s,i;return[["minecraft:block/components",(t=(e=n==null?void 0:n["minecraft:block"])==null?void 0:e.components)!=null?t:{}],...((i=(s=n==null?void 0:n["minecraft:block"])==null?void 0:s.permutations)!=null?i:[]).map((r,o)=>{var a;return[`minecraft:block/permutations/${o}/components`,(a=r.components)!=null?a:{}]})]}});function W(n,e,t,s=0){const i=[];for(const r of n){if(!r.startsWith("/")){i.push(r);continue}const[o,...a]=I.tokenizeCommand(r.slice(1)).tokens.map(({word:l})=>l),c=e[`command#${o}`];if(o==="execute"){let l=4;if(a[l]==="detect"&&(l+=6),a[l]===void 0){i.push(r);continue}const[m,...g]=a.slice(l),d=e[`command#${m}`];if(!(d instanceof q)){i.push(r);continue}i.push(...d.process(`${m} ${g.join(" ")}`,e,s+1).map(w=>w.startsWith("/")?`/execute ${a.slice(0,l).join(" ")} ${w.slice(1)}`:w));continue}else if(!(c instanceof q)){i.push(r);continue}i.push(...c.process(r,e,s))}return i.filter(r=>t||!r.startsWith("#")).map(r=>r.trim())}const _e=n=>({register:e=>{n.command=({name:t,schema:s,template:i})=>{t(e.command_name),s([]),i(r=>new e().onApply(r))}}});class q{constructor(e,t,s,i){this.console=e,this.commandSrc=t,this.mode=s,this.v1Compat=i}get name(){var e;return(e=this._name)!=null?e:"unknown"}async load(e,t,s){const i={command:null},r=await e.run(t,{console:this.console,defineCommand:l=>l,Bridge:this.v1Compat?_e(i):void 0}).catch(l=>(this.console.error(`Failed to execute command ${this.name}: ${l}`),null));if(!r)return null;if(typeof r.__default__!="function")if(i.command)r.__default__=i.command;else return this.console.error(`Component ${t} is not a valid component. Expected a function as the default export.`),!1;const o=l=>this._name=l;let a=l=>this.schema=l,c=()=>{};(!s||s==="server")&&(a=()=>{},c=l=>{this.template=(m,g)=>{try{return l(m,g)}catch(d){return this.console.error(d),[]}}}),await r.__default__({name:o,schema:a,template:c})}process(e,t,s){var c;e.startsWith("/")&&(e=e.slice(1));const[i,...r]=I.tokenizeCommand(e).tokens.map(({word:l})=>l),o=(c=this.template)==null?void 0:c.call(this,r.map(l=>I.castType(l)),{compilerMode:this.mode,commandNestingDepth:s,compileCommands:l=>W(l.map(m=>m.startsWith("/")?m:`/${m}`),t,!1,s+1).map(m=>m.startsWith("/")?m.slice(1):m)});let a=[];if(typeof o=="string")a=o.split(`
`);else if(Array.isArray(o))a=o.filter(l=>typeof l=="string");else{const l=`Failed to process command ${this._name}; Invalid command template return type: Expected string[] or string, received ${typeof o}`;this.console.error(l),a.push(`# ${l}`)}return a.map(l=>l.startsWith("/")||l.startsWith("#")?l:`/${l}`)}getSchema(){if(this.schema){if(Array.isArray(this.schema))return this.schema.length===0?[{commandName:this.name}]:this.schema.map(e=>({commandName:this.name,...e}))}else return[{commandName:this.name}];return this.schema.commandName||(this.schema.commandName=this.name),[this.schema]}toString(){return this.commandSrc}}const Se=({projectConfig:n,jsRuntime:e,console:t,fileType:s,requestJsonData:i,options:r})=>{const o=(d,w)=>n.resolvePackPath(d,w),a=d=>d&&s.getId(d)==="customCommand",c=d=>d&&s.getId(d)==="function",l=new Map,m=d=>{if(l.has(d))return l.get(d);const w=r.include[s.getId(d)];return l.set(d,w),w},g=d=>{var w,b,p;return(p=(b=(w=s.get(d))==null?void 0:w.meta)==null?void 0:b.commandsUseSlash)!=null?p:!1};return{async buildStart(){r.include=Object.assign(await i("data/packages/minecraftBedrock/location/validCommand.json"),r.include),l.clear()},ignore(d){return!a(d)&&!c(d)&&!m(d)},transformPath(d){if(a(d)&&r.buildType!=="fileRequest")return null},async read(d,w){if(!!w){if(a(d)&&d.endsWith(".js")){const b=await w.getFile();return await(b==null?void 0:b.text())}else if(c(d)){const b=await w.getFile();return await(b==null?void 0:b.text())}else if(m(d)&&w){const b=await w.getFile();if(!b)return;try{return H.default.parse(await b.text())}catch(p){t.error(p)}}}},async load(d,w){var b;if(a(d)){const p=new q(t,w,r.mode,(b=r.v1CompatMode)!=null?b:!1);return await p.load(e,d),p}},async registerAliases(d,w){if(a(d))return[`command#${w.name}`]},async require(d){if(m(d)||c(d))return[o("behaviorPack","commands/**/*.[jt]s"),o("behaviorPack","commands/*.[jt]s")]},async transform(d,w,b={}){const p=m(d);if(p&&p.length>0){const k=g(d);p.forEach(v=>I.setObjectAt(v,w,$=>{if(!$)return $;$=Array.isArray($)?$:[$];const S=[];for(const f of $){if(typeof f=="string"){S.push(f);continue}t.error(`The file "${d}" contains invalid commands. Expected type "string" within array but got type "${typeof f}"`)}return W(S.map(f=>!k&&!f.startsWith("/")?`/${f}`:f),b,!1).map(f=>k?f:f.slice(1))}))}else if(c(d)){const k=w.split(`
`).map(v=>v.trim()).filter(v=>v!==""&&!v.startsWith("#")).map(v=>`/${v}`);return W(k,b,!0).map(v=>v.startsWith("/")?v.slice(1):v).join(`
`)}},finalizeBuild(d,w){if(a(d)&&w)return w.toString();if(m(d)&&typeof w!="string")return JSON.stringify(w,null,"	")}}},Ce=({options:n})=>({ignore(e){return!e.endsWith(".ts")},async transformPath(e){if(!!(e!=null&&e.endsWith(".ts")))return e!=null&&e.endsWith(".d.ts")?null:`${e.slice(0,-3)}.js`},async read(e,t){if(!e.endsWith(".ts")||!t)return;const s=await t.getFile();return await(s==null?void 0:s.text())},async load(e,t){if(!(!e.endsWith(".ts")||t===null||typeof t!="string"))return await N.loadedWasm,J.transformSync(t,{filename:_.basename(e),sourceMaps:n!=null&&n.inlineSourceMap?"inline":void 0,jsc:{parser:{syntax:"typescript"},preserveAllComments:!1,target:"es2020",transform:{useDefineForClassFields:!1}}}).code},finalizeBuild(e,t){if(e.endsWith(".ts")&&typeof t=="string")return t}}),je=({options:n,outputFileSystem:e,projectRoot:t,packType:s,fileType:i,console:r})=>{n.packName||(n.packName="bridge project");const o=m=>m.split(/\\|\//g).filter(g=>g!==".."&&g!==".").slice(1).join("/"),a=m=>{const g=s.getId(m),d=_.relative(t,m);if(g==="behaviorPack"||g==="resourcePack"||g==="skinPack")return _.join(t,"builds/dist",g,o(d))},c=m=>{const g=s.getId(m),d=_.relative(t,m);if(g==="worldTemplate")return _.join(t,"builds/dist",o(d));if(g==="behaviorPack"||g==="resourcePack")return _.join(t,"builds/dist",g==="behaviorPack"?"behavior_packs":"resource_packs",n.packName,o(d))},l=m=>i.getId(m)==="worldManifest"?null:c(m);return{async buildStart(){await e.unlink(`${t}/builds/dist`).catch(()=>{})},transformPath(m){if(!!m)switch(n.format){case"mcaddon":return a(m);case"mcworld":return l(m);case"mctemplate":return c(m);default:r.error(`Unknown packaging format: ${n.format}`)}}}},Ae=({projectConfig:n,packType:e,options:t})=>{const s=Object.keys(n.getAvailablePacks()),i=Object.fromEntries(s.map(o=>[o,[]])),r=o=>{const a=e.getId(o);if(a!=="unknown")return[a,n.resolvePackPath(a,"contents.json")]};return t.buildType!=="fullBuild"?{}:{include(){return s.map(o=>[n.resolvePackPath(o,"contents.json"),{isVirtual:!0}])},read(o){const a=r(o);if(!a)return;const[c,l]=a;if(o!==l)return i[c]},transformPath(o){if(!o)return;const a=e.getId(o);a!=="unknown"&&i[a].push(o)},finalizeBuild(o){const a=r(o);if(!a)return;const[c,l]=a;if(o!==l)return JSON.stringify(i[c])}}},Ie=({fileType:n})=>{const e=new Set;for(const i of n.all)i.formatVersionMap&&e.add(i.id);const t=new Map,s=i=>{if(!i)return;let r=t.get(i);return r||(r=e.has(n.getId(i)),t.set(i,r),r)};return{ignore(i){return!s(i)},async read(i,r){if(!!r&&s(i)){const o=await r.getFile();if(!o)return;try{return H.default.parse(await o.text())}catch(a){console.error(a)}}},load(i,r){if(s(i))return r},transform(i,r){if(s(i)){const o=n.get(i),a=o==null?void 0:o.formatVersionMap;if(!a)return;const c=r==null?void 0:r.format_version;return c&&a[c]&&(r.format_version=a[c]),r}},finalizeBuild(i,r){if(s(i))return JSON.stringify(r)}}};class Te{constructor(e){this.console=e,this.__isCollection=!0,this.files=new Map}get hasFiles(){return this.files.size>0}getAll(){return[...this.files.entries()]}get(e){return this.files.get(e)}clear(){this.files.clear()}add(e,t){if(this.files.has(e)){this.console.warn(`Omitting file "${e}" from collection because it would overwrite a previously generated file!`);return}this.files.set(e,t)}has(e){return this.files.has(e)}addFrom(e,t){for(const[s,i]of e.getAll()){const r=t?_.join(t,s):s;this.add(r,i)}}}var Me=`import { join } from 'pathe'\r
import type { FileSystem } from '../../../FileSystem/FileSystem'\r
import type { Console } from '../../../Common/Console'\r
// @ts-expect-error\r
import { Collection } from '@bridge-interal/collection'\r
\r
declare const __fileSystem: FileSystem\r
declare const console: Console\r
declare const __omitUsedTemplates: Set<string>\r
declare const __baseDirectory: string\r
\r
export interface IModuleOpts {\r
	generatorPath: string\r
	omitUsedTemplates: Set<string>\r
	fileSystem: FileSystem\r
	console: Console\r
}\r
\r
interface IUseTemplateOptions {\r
	omitTemplate?: boolean\r
}\r
\r
export function useTemplate(\r
	filePath: string,\r
	{ omitTemplate = true }: IUseTemplateOptions = {}\r
) {\r
	const templatePath = join(__baseDirectory, filePath)\r
	if (omitTemplate) __omitUsedTemplates.add(templatePath)\r
\r
	// TODO(@solvedDev): Pipe file through compileFile API\r
	if (filePath.endsWith('.json')) return __fileSystem.readJson(templatePath)\r
	else return __fileSystem.readFile(templatePath).then((file) => file.text())\r
}\r
\r
export function createCollection() {\r
	return new Collection(console)\r
}\r
`,Oe=`import { join } from 'pathe'\r
import { Console } from '../../../Common/Console'\r
\r
export class Collection {\r
	public readonly __isCollection = true\r
	protected files = new Map<string, any>()\r
	constructor(protected console: Console) {}\r
\r
	get hasFiles() {\r
		return this.files.size > 0\r
	}\r
\r
	getAll() {\r
		return [...this.files.entries()]\r
	}\r
\r
	get(filePath: string) {\r
		return this.files.get(filePath)\r
	}\r
\r
	clear() {\r
		this.files.clear()\r
	}\r
	add(filePath: string, fileContent: any) {\r
		if (this.files.has(filePath)) {\r
			this.console.warn(\r
				\`Omitting file "\${filePath}" from collection because it would overwrite a previously generated file!\`\r
			)\r
			return\r
		}\r
		this.files.set(filePath, fileContent)\r
	}\r
	has(filePath: string) {\r
		return this.files.has(filePath)\r
	}\r
	addFrom(collection: Collection, baseDir?: string) {\r
		for (const [filePath, fileContent] of collection.getAll()) {\r
			const resolvedPath = baseDir ? join(baseDir, filePath) : filePath\r
			this.add(resolvedPath, fileContent)\r
		}\r
	}\r
}\r
`;const He=({options:n,fileType:e,console:t,jsRuntime:s,fileSystem:i,compileFiles:r,getFileMetadata:o,unlinkOutputFiles:a,addFileDependencies:c})=>{var S;const l=new Set(["gameTest","customCommand","customComponent","molangAstScript",...(S=n.ignoredFileTypes)!=null?S:[]]),m=f=>e.getId(f),g=f=>{var u;const F=e.get(f,void 0,!1);return F?(u=F.type)!=null?u:"json":"raw"},d=f=>!l.has(m(f))&&(f.endsWith(".js")||f.endsWith(".ts")),w=f=>{var u,h,y,C;return g(f)==="json"?".json":(C=(y=(h=(u=e.get(f,void 0,!1))==null?void 0:u.detect)==null?void 0:h.fileExtensions)==null?void 0:y[0])!=null?C:".txt"},b=f=>f.replace(/\.(js|ts)$/,w(f)),p=new Set,k=new Te(t),v=new Set,$=new Map;return{buildStart(){k.clear(),p.clear(),v.clear(),$.clear(),s.registerModule("@bridge-interal/collection",Oe),s.registerModule("@bridge/generate",Me),s.registerModule("pathe",{dirname:_.dirname,join:_.join})},ignore(f){return!d(f)&&!p.has(f)&&!k.has(f)},transformPath(f){if(f&&d(f))return b(f)},async read(f,F){if(d(f)&&F){const h=await F.getFile();return h?h.text():void 0}const u=k.get(f);if(u)return u},async load(f,F){var A,O;if(!d(f))return;if(!F)return null;const u=new Set,h=await s.run(f,{console:t,__baseDirectory:_.dirname(f),__omitUsedTemplates:p,__fileSystem:i},F).catch(T=>(t.error(`Failed to execute generator script "${f}": ${T}`),null));if(!h)return null;if(!h.__default__)return t.error(`Expected generator script "${f}" to provide file content as default export!`),null;const y=o(f);((A=y.get("unlinkedFiles"))!=null?A:[]).filter(T=>!u.has(T)).forEach(T=>v.add(T)),y.set("unlinkedFiles",[...u]);const M=(O=y.get("generatedFiles"))!=null?O:[];return await a([...M,...u]).catch(()=>{}),$.set(f,u),h.__default__},require(f){const F=$.get(f);if(F)return[...F]},finalizeBuild(f,F){if(k.get(f))return f.endsWith(".json")&&typeof F!="string"?JSON.stringify(F,null,"	"):F;if(p.has(f))return null;if(d(f)){if(F===null)return null;const u=o(f);return F.__isCollection?(k.addFrom(F,_.dirname(f)),u.set("generatedFiles",F.getAll().map(([h])=>h)),null):(u.set("generatedFiles",[b(f)]),typeof F=="object"?JSON.stringify(F):F)}},async buildEnd(){s.deleteModule("@bridge/generate"),s.deleteModule("@bridge-interal/collection"),s.deleteModule("pathe"),v.size>0&&await r([...v].filter(f=>!k.has(f)),!1),k.hasFiles&&await r(k.getAll().map(([f])=>f))},async beforeFileUnlinked(f){var F,u;if(d(f)){let h=null;try{h=o(f)}catch{}if(!h)return;const y=(F=h.get("unlinkedFiles"))!=null?F:[],C=(u=h.get("generatedFiles"))!=null?u:[];await a(C),await r(y)}}}};class Y extends N.Runtime{constructor(e,t){super(t),this.fs=e}readFile(e){return this.fs.readFile(e)}deleteModule(e){this.baseModules.delete(e)}}const Z={simpleRewrite:ce,rewriteForPackaging:je,moLang:z,molang:z,entityIdentifierAlias:de,customEntityComponents:ve,customItemComponents:be,customBlockComponents:$e,customCommands:Se,typeScript:Ce,contentsFile:Ae,formatVersionCorrection:Ie,generatorScripts:He},Pe=["buildStart","buildEnd","include","ignore","transformPath","read","load","registerAliases","require","transform","finalizeBuild","beforeFileUnlinked"];class Ee{constructor(e){this.dash=e,this.implementedHooks=new Map,this.pluginRuntime=new Y(this.dash.fileSystem)}pluginsFor(e,t){var s,i;return t?(s=t.myImplementedHooks.get(e))!=null?s:[]:(i=this.implementedHooks.get(e))!=null?i:[]}getImplementedHooks(){return this.implementedHooks}async loadPlugins(e={}){var c;this.implementedHooks.clear(),this.pluginRuntime.clearCache();const t=[...(await this.dash.fileSystem.readdir(_.join(this.dash.projectRoot,".bridge/extensions")).catch(()=>[])).map(l=>l.kind==="directory"?_.join(this.dash.projectRoot,".bridge/extensions",l.name):void 0),...(await this.dash.fileSystem.readdir("extensions").catch(()=>[])).map(l=>l.kind==="directory"?_.join("extensions",l.name):void 0)],s={},i=[];for(const l of t)!l||i.push(this.dash.fileSystem.readJson(_.join(l,"manifest.json")).then(m=>{var g;if(!!((g=m==null?void 0:m.compiler)!=null&&g.plugins))for(const d in m.compiler.plugins)s[d]=_.join(l,m.compiler.plugins[d])}).catch(()=>{}));await Promise.all(i);const r=(c=(await this.getCompilerOptions()).plugins)!=null?c:[],o=[],a=[];for(let l=0;l<r.length;l++){const m=r[l],g=typeof m=="string"?m:m[0];s[g]?a.push(this.pluginRuntime.run(s[g],{console:this.dash.console,...e}).catch(d=>(this.dash.console.error(`Failed to execute plugin ${g}: ${d}`),null)).then(d=>{!d||(typeof d.__default__=="function"?o[l]=d.__default__:(o[l]=null,this.dash.console.error(`Plugin ${g} is invalid: It does not provide a function as a default export.`)))})):Z[g]?o[l]=Z[g]:(o[l]=null,this.dash.console.error(`Unknown compiler plugin: ${g}`))}await Promise.all(a);for(let l=0;l<r.length;l++){const m=o[l];if(!m)continue;const g=r[l],d=typeof g=="string"?{}:g[1],w=typeof g=="string"?g:g[0];this.addPlugin(w,m,d)}}async addPlugin(e,t,s){const i=new le(this.dash,e,await t(this.getPluginContext(e,s)));for(const r of Pe)if(i.implementsHook(r)){let o=this.implementedHooks.get(r);o||(o=[],this.implementedHooks.set(r,o)),o.push(i)}}async getCompilerOptions(){var t;const e=await this.dash.getCompilerConfigPath();return e?await this.dash.fileSystem.readJson(e):(t=this.dash.projectConfig.get().compiler)!=null?t:{}}getPluginContext(e,t={}){const s=this.dash;return{options:{get mode(){return s.getMode()},get buildType(){return s.buildType},...t},jsRuntime:this.dash.jsRuntime,console:this.dash.console,fileSystem:this.dash.fileSystem,outputFileSystem:this.dash.outputFileSystem,projectConfig:this.dash.projectConfig,projectRoot:this.dash.projectRoot,packType:this.dash.packType,fileType:this.dash.fileType,targetVersion:this.dash.projectConfig.get().targetVersion,requestJsonData:this.dash.requestJsonData,getAliases:i=>{var r,o;return[...(o=(r=this.dash.includedFiles.get(i))==null?void 0:r.aliases)!=null?o:[]]},getAliasesWhere:i=>this.dash.includedFiles.getAliasesWhere(i),getFileMetadata:i=>{const r=this.dash.includedFiles.get(i);if(!r)throw new Error(`File ${i} to get metadata from not found`);return{get(o){return r.getMetadata(o)},set(o,a){r.addMetadata(o,a)},delete(o){r.deleteMetadata(o)}}},addFileDependencies:(i,r,o=!1)=>{const a=this.dash.includedFiles.get(i);if(!a)throw new Error(`File ${i} to add dependency to not found`);o?a.setRequiredFiles(new Set(r)):r.forEach(c=>a.addRequiredFile(c))},getOutputPath:i=>this.dash.getCompilerOutputPath(i),unlinkOutputFiles:i=>this.dash.unlinkMultiple(i,!1,!0),hasComMojangDirectory:this.dash.fileSystem!==this.dash.outputFileSystem,compileFiles:(i,r=!0)=>this.dash.compileAdditionalFiles(i,r)}}async runBuildStartHooks(){await Promise.all(this.pluginsFor("buildStart").map(e=>e.runBuildStartHook()))}async runIncludeHooks(){let e=[];for(const t of this.pluginsFor("include")){const s=await t.runIncludeHook();Array.isArray(s)&&e.push(...s)}return e}async runIgnoreHooks(e){for(const t of this.pluginsFor("ignore"))await t.runIgnoreHook(e.filePath)&&e.addIgnoredPlugin(t.pluginId);e.createImplementedHooksMap()}async runTransformPathHooks(e){let t=e.filePath;for(const s of this.pluginsFor("transformPath")){const i=await s.runTransformPathHook(t);if(i===null)return null;i!==void 0&&(t=i)}return t}async runReadHooks(e){for(const t of this.pluginsFor("read",e)){const s=await t.runReadHook(e.filePath,e.fileHandle);if(s!=null)return s}}async runLoadHooks(e){let t=e.data;for(const s of this.pluginsFor("load",e)){const i=await s.runLoadHook(e.filePath,t);i!==void 0&&(t=i)}return t}async runRegisterAliasesHooks(e){const t=new Set;for(const s of this.pluginsFor("registerAliases",e)){const i=await s.runRegisterAliasesHook(e.filePath,e.data);i!=null&&(Array.isArray(i)?i.forEach(r=>t.add(r)):t.add(i))}return t}async runRequireHooks(e){const t=new Set;for(const s of this.pluginsFor("require",e)){const i=await s.runRequireHook(e.filePath,e.data);i!=null&&(Array.isArray(i)?i.forEach(r=>t.add(r)):t.add(i))}return t}async runTransformHooks(e){const t=Object.fromEntries([...e.requiredFiles].map(i=>this.dash.includedFiles.query(i)).flat().map(i=>[[i.filePath,i.data],...[...i.aliases].map(r=>[r,i.data])]).flat());let s=e.data;for(const i of this.pluginsFor("transform",e)){const r=await i.runTransformHook(e.filePath,s,t);r!==void 0&&(s=r)}return s}async runFinalizeBuildHooks(e){for(const t of this.pluginsFor("finalizeBuild",e)){const s=await t.runFinalizeBuildHook(e.filePath,e.data);if(s!==void 0)return s}}async runBuildEndHooks(){await Promise.allSettled(this.pluginsFor("buildEnd").map(e=>e.runBuildEndHook()))}async runBeforeFileUnlinked(e){for(const t of this.pluginsFor("beforeFileUnlinked"))await t.runBeforeFileUnlinked(e)}}class D{constructor(e,t,s=!1){this.dash=e,this.filePath=t,this.isVirtual=s,this.isDone=!1,this.requiredFiles=new Set,this.aliases=new Set,this.updateFiles=new Set,this.metadata=new Map,this.ignoredByPlugins=new Set,this._myImplementedHooks=null,this._cachedFile=null,this.outputPath=t,this.isVirtual||this.setDefaultFileHandle()}isIgnoredBy(e){return this.ignoredByPlugins.has(e)}addIgnoredPlugin(e){this.ignoredByPlugins.add(e)}createImplementedHooksMap(){var s;this._myImplementedHooks=new Map;for(const[i,r]of this.dash.plugins.getImplementedHooks()){const o=r.filter(a=>!this.isIgnoredBy(a.pluginId));this._myImplementedHooks.set(i,o)}((s=this.myImplementedHooks.get("read"))!=null?s:[]).length>0&&(this._cachedFile=this.dash.fileSystem.readFile(this.filePath).catch(()=>null))}get myImplementedHooks(){if(this._myImplementedHooks)return this._myImplementedHooks;throw new Error("Tried to access implemented hooks before they were created")}setFileHandle(e){this.fileHandle=e}setDefaultFileHandle(){this.setFileHandle({getFile:()=>this._cachedFile})}setOutputPath(e){this.outputPath=e}setReadData(e){this.data=e}setAliases(e){for(const t of e)this.dash.includedFiles.addAlias(t,this);this.aliases=e}setRequiredFiles(e){this.requiredFiles=e}addRequiredFile(e){this.requiredFiles.add(e)}setUpdateFiles(e){this.updateFiles=new Set(e.map(t=>this.dash.includedFiles.get(t)).filter(t=>t!==void 0))}addUpdateFile(e){this.updateFiles.add(e)}removeUpdateFile(e){this.updateFiles.delete(e)}setMetadata(e){typeof e=="object"&&(this.metadata=new Map(Object.entries(e)))}addMetadata(e,t){this.metadata.set(e,t)}deleteMetadata(e){this.metadata.delete(e)}getMetadata(e){return this.metadata.get(e)}getAllMetadata(){return Object.fromEntries(this.metadata.entries())}getHotUpdateChain(){const e=new Set([this]);for(const t of this.updateFiles)t.getHotUpdateChain().forEach(s=>{e.add(s)});return e}filesToLoadForHotUpdate(e=new Set,t=!0){const s=new Set;if(e.has(this))return s;e.add(this);for(const i of this.requiredFiles){const r=this.dash.includedFiles.query(i);for(const o of r)o.filesToLoadForHotUpdate(e,!1).forEach(a=>{s.add(a)})}if(s.add(this),t)for(const i of this.updateFiles)i.filesToLoadForHotUpdate(e,!0).forEach(r=>{s.add(r)});return s}processAfterLoad(e,t){(this.data===null||this.data===void 0)&&(this.isDone=!0,this.filePath!==this.outputPath&&this.outputPath!==null&&!this.isVirtual&&e&&t.push(this.dash.fileSystem.copyFile(this.filePath,this.outputPath,this.dash.outputFileSystem)))}serialize(){return{isVirtual:this.isVirtual,filePath:this.filePath,aliases:[...this.aliases],requiredFiles:[...this.requiredFiles],updateFiles:[...this.updateFiles].map(e=>e.filePath),metadata:this.metadata.size>0?Object.fromEntries(this.metadata.entries()):void 0}}reset(){this.isDone=!1,this.data=null,this._myImplementedHooks=null,this._cachedFile=null,this.isVirtual||this.setDefaultFileHandle()}}class qe{constructor(e){this.dash=e,this.files=new Map,this.aliases=new Map,this.queryCache=new Map}all(){return[...this.files.values()]}filtered(e){return this.all().filter(t=>e(t))}get(e){var t;return(t=this.aliases.get(e))!=null?t:this.files.get(e)}getFromFilePath(e){return this.files.get(e)}query(e){const t=this.aliases.get(e);if(t)return[t];const s=this.files.get(e);return s?[s]:oe.default(e)?this.queryGlob(e):[]}addAlias(e,t){this.aliases.set(e,t)}getAliasesWhere(e){return[...this.aliases.keys()].filter(e)}queryGlob(e){if(this.queryCache.has(e))return this.queryCache.get(e);const t=this.filtered(s=>I.isMatch(s.filePath,e));return this.queryCache.set(e,t),t}async loadAll(){this.dash.console.time("Load all files"),this.queryCache=new Map;const e=new Set,t=this.dash.projectConfig.getAvailablePackPaths(),s=[];for(const r of t)s.push(this.dash.fileSystem.allFiles(r).catch(o=>(this.dash.console.warn(o),[])).then(o=>{for(const a of o)e.add(a)}));await Promise.all(s);const i=await this.dash.plugins.runIncludeHooks();for(const r of i)typeof r=="string"?e.add(r):this.addOne(r[0],r[1].isVirtual);this.add([...e]),this.dash.console.timeEnd("Load all files")}addOne(e,t=!1){const s=new D(this.dash,e,t);return this.files.set(e,s),s}add(e,t=!1){let s=[];for(const i of e){const r=this.files.get(i);if(r){s.push(r);continue}s.push(new D(this.dash,i,t)),this.files.set(i,s[s.length-1])}return s}remove(e){const t=this.files.get(e);if(!!t){this.files.delete(e);for(const s of t.aliases)this.aliases.delete(s)}}async save(e){await this.dash.fileSystem.writeJson(e,this.all().map(t=>t.serialize()))}async load(e){this.removeAll();const t=await this.dash.fileSystem.readJson(e).catch(()=>null),s=[];if(!!t){for(const i of t){const r=new D(this.dash,i.filePath,i.isVirtual);r.setAliases(new Set(i.aliases)),r.setRequiredFiles(new Set(i.requiredFiles)),r.setMetadata(i.metadata),r.createImplementedHooksMap(),s.push(r);for(const o of i.aliases)this.aliases.set(o,r)}this.files=new Map(s.map(i=>[i.filePath,i]));for(let i=0;i<s.length;i++)s[i].setUpdateFiles(t[i].updateFiles)}}resetAll(){for(const e of this.all())e.reset()}removeAll(){this.files=new Map,this.aliases=new Map,this.queryCache=new Map}}class De{constructor(e){this.dash=e,this.copyFilePromises=[]}async run(e,t=!0){this.copyFilePromises=[];let s=[];for(const i of e)i.isDone||s.push(this.loadFile(i,t));await Promise.allSettled(s),await Promise.allSettled(e.map(async i=>{const r=await this.dash.plugins.runRequireHooks(i);i.setRequiredFiles(r)}))}async loadFile(e,t=!0){var a;const[s,i]=await Promise.all([this.dash.plugins.runIgnoreHooks(e),this.dash.plugins.runTransformPathHooks(e)]),r=await this.dash.plugins.runReadHooks(e);if(e.setOutputPath(i),e.setReadData(r),e.processAfterLoad(t,this.copyFilePromises),e.isDone)return;e.setReadData((a=await this.dash.plugins.runLoadHooks(e))!=null?a:e.data);const o=await this.dash.plugins.runRegisterAliasesHooks(e);e.setAliases(o)}async awaitAllFilesCopied(){this.copyFilePromises.length!==0&&(await Promise.allSettled(this.copyFilePromises),this.copyFilePromises=[])}}class Ne{constructor(e){this.dash=e}run(e){const t=new Set;for(const s of e)s.isDone||t.has(s)||this.resolveSingle(s,t);return t}resolveSingle(e,t,s=new Set){const i=this.dash.includedFiles;s.add(e);for(const r of e.requiredFiles){const o=i.query(r);for(const a of o){if(!a){this.dash.console.error(`Undefined file dependency: "${e.filePath}" requires "${r}"`);continue}if(a.addUpdateFile(e),!t.has(a)){if(s.has(a)){this.dash.console.error(`Circular dependency detected: ${a.filePath} is required by ${e.filePath} but also depends on this file.`);continue}this.resolveSingle(a,t,s)}}}t.add(e),s.delete(e)}}function xe(n){return typeof n=="string"||n instanceof Blob||n instanceof File||n instanceof ArrayBuffer||(n==null?void 0:n.buffer)instanceof ArrayBuffer}class Re{constructor(e){this.dash=e}async run(e,t=!1){const s=[];for(const i of e){if(i.isDone)continue;let r=await this.transformFile(i,!0,t);r!=null&&i.outputPath!==null&&i.filePath!==i.outputPath&&s.push(this.dash.outputFileSystem.writeFile(i.outputPath,r))}await Promise.allSettled(s)}async transformFile(e,t=!1,s=!1){var r;if(s||(e.data=(r=await this.dash.plugins.runTransformHooks(e))!=null?r:e.data),!t)return e.data;let i=await this.dash.plugins.runFinalizeBuildHooks(e);return i===void 0&&(i=e.data),i!=null&&(xe(i)||(this.dash.console.warn(`File "${e.filePath}" was not in a writable format: "${typeof i}". Trying to JSON.stringify(...) it...`,i),i=JSON.stringify(i))),e.isDone=!0,i}}class Be{constructor(e=1){this.total=e,this.current=0,this.onChangeCbs=new Set}get percentage(){return this.current/this.total}onChange(e){return this.onChangeCbs.add(e),{dispose:()=>this.onChangeCbs.delete(e)}}setTotal(e){this.total=e,this.current=0,this.onChangeCbs.forEach(t=>t(this))}updateCurrent(e){this.current=e,this.onChangeCbs.forEach(t=>t(this))}advance(){this.current++,this.onChangeCbs.forEach(e=>e(this))}addToTotal(e){this.total+=e,this.onChangeCbs.forEach(t=>t(this))}}class ee{constructor(e=!1){this.verboseLogs=e,this._timers=new Map}time(e){if(!!this.verboseLogs)if(this._timers.has(e)){this.warn(`Timer "${e}" already exists.`);return}else this._timers.set(e,Date.now())}timeEnd(e){if(!this.verboseLogs)return;const t=this._timers.get(e);if(t)this._timers.delete(e),this.log(`${e}: ${Date.now()-t}ms`);else{this.warn(`Timer "${e}" does not exist.`);return}}}class te extends ee{constructor(e){super(e)}log(...e){console.log(...e)}error(...e){console.error(...e)}warn(...e){console.warn(...e)}info(...e){console.info(...e)}}class We{constructor(e,t,s){var i;this.fileSystem=e,this.options=s,this.progress=new Be,this.plugins=new Ee(this),this.includedFiles=new qe(this),this.loadFiles=new De(this),this.fileOrderResolver=new Ne(this),this.fileTransformer=new Re(this),this.buildType="fullBuild",this.outputFileSystem=t!=null?t:e,this.projectRoot=_.dirname(s.config),this.projectConfig=new ae(e,s.config),this.console=(i=s.console)!=null?i:new te(s.verbose),this.jsRuntime=new Y(this.fileSystem,[["@molang/expressions",E.expressions],["@molang/core",{Molang:E.Molang}],["molang",{Molang:E.Molang,...E.expressions}],["@bridge/compiler",{mode:s.mode}]]),this.packType=s.packType,this.fileType=s.fileType}getMode(){var e;return(e=this.options.mode)!=null?e:"development"}getCompilerConfigPath(){return this.options.compilerConfig}get requestJsonData(){return this.options.requestJsonData}get dashFilePath(){return _.join(this.projectRoot,`.bridge/.dash.${this.getMode()}.json`)}async setup(e){var t,s,i,r;try{await this.projectConfig.setup()}catch(o){this.console.error("Failed to load project config: "+o)}(t=this.fileType)==null||t.setProjectConfig(this.projectConfig),(s=this.packType)==null||s.setProjectConfig(this.projectConfig),await((i=this.fileType)==null?void 0:i.setup(e)),await((r=this.packType)==null?void 0:r.setup(e)),await this.plugins.loadPlugins(this.options.pluginEnvironment)}async reload(){try{await this.projectConfig.refreshConfig()}catch{}await this.plugins.loadPlugins(this.options.pluginEnvironment)}get isCompilerActivated(){const e=this.projectConfig.get();return e.compiler!==void 0&&Array.isArray(e.compiler.plugins)}async build(){if(this.console.log("Starting compilation..."),!this.isCompilerActivated)return;this.jsRuntime.clearCache(),this.buildType="fullBuild",this.includedFiles.removeAll();const e=Date.now();this.progress.setTotal(7),this.console.time("[HOOK] Build start"),await this.plugins.runBuildStartHooks(),this.console.timeEnd("[HOOK] Build start"),this.progress.advance(),await this.includedFiles.loadAll(),this.progress.advance(),await this.compileIncludedFiles(),this.console.time("[HOOK] Build end"),await this.plugins.runBuildEndHooks(),this.console.timeEnd("[HOOK] Build end"),this.progress.advance(),this.getMode()==="development"&&await this.saveDashFile(),this.includedFiles.resetAll(),this.progress.advance(),this.console.log(`Dash compiled ${this.includedFiles.all().length} files in ${Date.now()-e}ms!`)}async updateFiles(e,t=!0){var a;if(!this.isCompilerActivated||e.length===0)return;this.buildType="hotUpdate",this.jsRuntime.clearCache(),this.progress.setTotal(8),this.console.log(`Dash is starting to update ${e.length} files...`),await this.includedFiles.load(this.dashFilePath),await this.plugins.runBuildStartHooks();const s=[];for(const c of e){let l=this.includedFiles.get(c);l||([l]=await this.includedFiles.add([c])),s.push(l)}this.progress.advance();const i=[];for(const c of s)i.push(new Set([...c.requiredFiles]));this.progress.advance(),await this.loadFiles.run(s),this.progress.advance();for(let c=0;c<s.length;c++){const l=s[c];[...l.requiredFiles].filter(d=>!i[c].has(d)).forEach(d=>this.includedFiles.query(d).forEach(w=>w.addUpdateFile(l))),[...i[c]].filter(d=>!l.requiredFiles.has(d)).forEach(d=>this.includedFiles.query(d).forEach(w=>w.removeUpdateFile(l)))}this.progress.advance();const r=new Set(s.map(c=>[...c.filesToLoadForHotUpdate()]).flat());this.console.log(`Dash is loading ${r.size} files...`),await this.loadFiles.run([...r.values()].filter(c=>!s.includes(c))),this.progress.advance();const o=new Set(s.map(c=>[...c.getHotUpdateChain()]).flat());for(const c of r)c.isDone||(c.data=(a=await this.plugins.runTransformHooks(c))!=null?a:c.data,o.has(c)||(c.isDone=!0));this.progress.advance(),this.console.log(`Dash is compiling ${o.size} files...`),await this.fileTransformer.run(o,!0),await this.loadFiles.awaitAllFilesCopied(),this.progress.advance(),await this.plugins.runBuildEndHooks(),t&&await this.saveDashFile(),this.includedFiles.resetAll(),this.console.log(`Dash finished updating ${o.size} files!`),this.progress.advance()}async compileFile(e,t){var o;if(!this.isCompilerActivated)return[[],t];this.buildType="fileRequest",this.jsRuntime.clearCache(),this.progress.setTotal(7),await this.plugins.runBuildStartHooks(),await this.includedFiles.load(this.dashFilePath);let s=this.includedFiles.get(e);s||([s]=await this.includedFiles.add([e])),s.setFileHandle({getFile:async()=>new File([t],_.basename(e))}),await this.loadFiles.loadFile(s,!1),this.progress.advance();const i=s.filesToLoadForHotUpdate();await this.loadFiles.run([...i.values()].filter(a=>s!==a),!1),this.progress.advance();for(const a of i)a.isDone||(a.data=(o=await this.plugins.runTransformHooks(a))!=null?o:a.data);this.progress.advance();const r=await this.fileTransformer.transformFile(s,!0,!0);return this.progress.advance(),await this.includedFiles.load(this.dashFilePath),this.progress.advance(),await this.plugins.runBuildEndHooks(),[[...i].map(a=>a.filePath),r]}async unlinkMultiple(e,t=!0,s=!1){if(!this.isCompilerActivated||e.length===0)return;const i=[];for(const r of e)await this.unlink(r,!1,s).catch(o=>i.push(o));if(i.length>0)throw i[0];t&&await this.saveDashFile()}async unlink(e,t=!0,s=!1){if(!this.isCompilerActivated)return;const i=await this.getCompilerOutputPath(e);!i||i===e||(s||(await this.plugins.runBeforeFileUnlinked(e),this.includedFiles.remove(e)),await this.outputFileSystem.unlink(i),t&&await this.saveDashFile())}async rename(e,t){!this.isCompilerActivated||(await this.unlink(e,!1),await this.updateFiles([t],!1),await this.saveDashFile())}async getCompilerOutputPath(e){var i,r;if(!this.isCompilerActivated)return;const t=(i=this.includedFiles.get(e))!=null?i:new D(this,e);if(t&&t.outputPath!==e)return(r=t.outputPath)!=null?r:void 0;const s=await this.plugins.runTransformPathHooks(t);if(!!s)return s}async getFileMetadata(e){if(!this.isCompilerActivated)return;const t=this.includedFiles.get(e);return t?t.getAllMetadata():null}async getFileDependencies(e){if(!this.isCompilerActivated)return[];await this.includedFiles.load(this.dashFilePath);const t=this.includedFiles.get(e);return t?[...t.filesToLoadForHotUpdate()].filter(s=>!s.isVirtual).map(s=>s.filePath).filter(s=>s!==null&&s!==e):[]}async saveDashFile(){await this.includedFiles.save(this.dashFilePath)}async compileIncludedFiles(e=this.includedFiles.all()){this.console.time("Loading files..."),await this.loadFiles.run(e),this.console.timeEnd("Loading files..."),this.progress.advance(),this.console.time("Resolving file order...");const t=this.fileOrderResolver.run(e);this.console.timeEnd("Resolving file order..."),this.progress.advance(),this.console.time("Transforming files..."),await this.fileTransformer.run(t),this.console.timeEnd("Transforming files..."),this.progress.advance(),await this.loadFiles.awaitAllFilesCopied()}async compileAdditionalFiles(e,t=!0){const s=await this.includedFiles.add(e,t);this.progress.addToTotal(3),s.forEach(i=>i.reset()),await this.compileIncludedFiles(s)}}function Je(n){N.initRuntimes(n),ne.default(n)}class ze{async allFiles(e){const t=[],s=await this.readdir(e);for(const{name:i,kind:r}of s)r==="directory"?t.push(...await this.allFiles(_.join(e,i))):r==="file"&&t.push(_.join(e,i));return t}async directoryHasAnyFile(e){return(await this.readdir(e).catch(()=>[])).length>0}async copyFile(e,t,s=this){const i=await this.readFile(e);await s.writeFile(t,new Uint8Array(await i.arrayBuffer()))}async writeJson(e,t,s=!0){await this.writeFile(e,JSON.stringify(t,null,s?"	":0))}async readJson(e){const t=await this.readFile(e);try{return await H.default.parse(await t.text())}catch{throw new Error(`Invalid JSON: ${e}`)}}watchDirectory(e,t){console.warn("Watching a directory for changes is not supported on this platform!")}}j.Command=q,j.Component=Q,j.Console=ee,j.Dash=We,j.DefaultConsole=te,j.FileSystem=ze,j.initRuntimes=Je,Object.defineProperty(j,"__esModule",{value:!0}),j[Symbol.toStringTag]="Module"});
