(function(j,H){typeof exports=="object"&&typeof module!="undefined"?H(exports,require("mc-project-core"),require("path-browserify"),require("molang"),require("bridge-common-utils"),require("json5"),require("@swc/wasm-web"),require("bridge-js-runtime"),require("is-glob")):typeof define=="function"&&define.amd?define(["exports","mc-project-core","path-browserify","molang","bridge-common-utils","json5","@swc/wasm-web","bridge-js-runtime","is-glob"],H):(j=typeof globalThis!="undefined"?globalThis:j||self,H(j.DashCompiler={},j.mcProjectCore,j.pathBrowserify,j.molang,j.bridgeCommonUtils,j.json5,j.wasmWeb,j.bridgeJsRuntime,j.isGlob))})(this,function(j,H,$,E,A,se,ie,x,re){"use strict";function J(n){return n&&typeof n=="object"&&"default"in n?n:{default:n}}var P=J(se),ne=J(re);class oe extends H.ProjectConfig{constructor(e,t){super($.dirname(t)),this.fileSystem=e,this.configPath=t}readConfig(){return this.fileSystem.readJson(this.configPath)}writeConfig(e){return this.fileSystem.writeJson(this.configPath,e)}}class ae{constructor(e,t,s){this.dash=e,this.pluginId=t,this.plugin=s}implementsHook(e){return typeof this.plugin[e]=="function"}async runBuildStartHook(){var e,t;try{return await((t=(e=this.plugin).buildStart)==null?void 0:t.call(e))}catch(s){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "buildStart" hook:`,s)}}async runIncludeHook(){var e,t;try{return await((t=(e=this.plugin).include)==null?void 0:t.call(e))}catch(s){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "include" hook:`,s)}}async runIgnoreHook(e){var t,s;try{return await((s=(t=this.plugin).ignore)==null?void 0:s.call(t,e))}catch(i){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "ignore" hook for "${e}":`,i)}}async runTransformPathHook(e){var t,s;try{return await((s=(t=this.plugin).transformPath)==null?void 0:s.call(t,e))}catch(i){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "transformPath" hook for "${e}":`,i)}}async runReadHook(e,t){var s,i;try{return await((i=(s=this.plugin).read)==null?void 0:i.call(s,e,t))}catch(r){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "read" hook for "${e}":`,r)}}async runLoadHook(e,t){var s,i;try{return await((i=(s=this.plugin).load)==null?void 0:i.call(s,e,t))}catch(r){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "load" hook for "${e}":`,r)}}async runRegisterAliasesHook(e,t){var s,i;try{return await((i=(s=this.plugin).registerAliases)==null?void 0:i.call(s,e,t))}catch(r){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "registerAliases" hook for "${e}":`,r)}}async runRequireHook(e,t){var s,i;try{return await((i=(s=this.plugin).require)==null?void 0:i.call(s,e,t))}catch(r){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "require" hook for "${e}":`,r)}}async runTransformHook(e,t,s){var i,r;try{return await((r=(i=this.plugin).transform)==null?void 0:r.call(i,e,t,s))}catch(o){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "transform" hook for "${e}":`,o)}}async runFinalizeBuildHook(e,t){var s,i;try{return await((i=(s=this.plugin).finalizeBuild)==null?void 0:i.call(s,e,t))}catch(r){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "finalizeBuild" hook for "${e}":`,r)}}async runBuildEndHook(){var e,t;try{return await((t=(e=this.plugin).buildEnd)==null?void 0:t.call(e))}catch(s){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "buildEnd" hook:`,s)}}async runBeforeFileUnlinked(e){var t,s;try{return await((s=(t=this.plugin).beforeFileUnlinked)==null?void 0:s.call(t,e))}catch(i){this.dash.console.error(`The plugin "${this.pluginId}" threw an error while running the "beforeFileUnlinked" hook for "${e}":`,i)}}}const le=({options:n,outputFileSystem:e,hasComMojangDirectory:t,projectConfig:s,projectRoot:i,packType:r})=>{var l;n.buildName||(n.buildName=n.mode==="development"?"dev":"dist"),n.packName||(n.packName="Bridge"),(l=n.rewriteToComMojang)==null||l||(t=!1);const o={behaviorPack:"development_behavior_packs",resourcePack:"development_resource_packs",skinPack:"skin_packs",worldTemplate:"minecraftWorlds"},a=h=>t&&n.mode==="development"?`${o[h]}`:`${i}/builds/${n.buildName}`,u=(h,g)=>`${a(h)}/${n.packName} ${g}`;return{async buildStart(){if(n.mode==="production"||n.buildType==="fullBuild")if(t)for(const h in o){const g=r.getFromId(h);!g||await e.unlink(u(h,g.defaultPackPath)).catch(()=>{})}else await e.unlink(a("BP")).catch(()=>{})},transformPath(h){var b,f;if(!h||h.includes("BP/scripts/gametests/")&&n.mode==="production")return;const g=r==null?void 0:r.get(h);if(!g)return;const d=s.getAbsolutePackRoot(g.id),y=$.relative(d,h);if(["behaviorPack","resourcePack","skinPack","worldTemplate"].includes(g.id))return $.join(u(g.id,(f=(b=n.packNameSuffix)==null?void 0:b[g.id])!=null?f:g.defaultPackPath),y)}}},z=async({fileType:n,projectConfig:e,requestJsonData:t,options:s,console:i,jsRuntime:r})=>{const o=(f,F)=>e.resolvePackPath(f,F),a=new E.CustomMoLang({}),u=[e.resolvePackPath("behaviorPack","molang"),e.resolvePackPath("resourcePack","molang")],l=f=>f&&u.some(F=>f.startsWith(`${F}/`))&&f.endsWith(".molang"),h=e.resolvePackPath("behaviorPack","scripts/molang"),g=f=>f==null?void 0:f.startsWith(`${h}/`),d=new Map,y=f=>{if(d.has(f))return d.get(f);const F=s.include[n.getId(f)];return d.set(f,F),F};let b=[];return{async buildStart(){s.include=Object.assign(await t("data/packages/minecraftBedrock/location/validMoLang.json"),s.include),d.clear()},ignore(f){return!l(f)&&!g(f)&&!y(f)},transformPath(f){if(l(f)||g(f))return null},async read(f,F){if((l(f)||g(f))&&F){const w=await F.getFile();return await(w==null?void 0:w.text())}else if(y(f)&&f.endsWith(".json")&&F){const w=await F.getFile();if(!w)return;try{return P.default.parse(await w.text())}catch(S){return s.buildType!=="fileRequest"&&i.error(`Error within file "${f}": ${S}`),{__error__:`Failed to load original file: ${S}`}}}},async load(f,F){if(l(f)&&F)a.parse(F);else if(g(f)){const w=await r.run(f,{console:i},F).catch(S=>(i.error(`Failed to execute Molang AST script "${f}": ${S}`),null));if(!w)return null;typeof w.__default__=="function"&&b.push(w.__default__)}},async require(f){if(y(f))return[o("behaviorPack","scripts/molang/**/*.[jt]s"),o("behaviorPack","molang/**/*.molang"),o("resourcePack","molang/**/*.molang")]},async transform(f,F){const w=y(f);w&&w.length>0&&w.forEach(S=>A.setObjectAt(S,F,_=>{if(typeof _!="string"||_[0]==="/"||_[0]==="@")return _;if(b.length>0){let m=null;try{m=a.parse(_)}catch(v){s.buildType!=="fileRequest"&&i.error(`Error within file "${f}"; script "${_}": ${v}`)}if(m){for(const v of b)m=m.walk(v);_=m.toString()}}try{return a.transform(_)}catch(m){return s.buildType!=="fileRequest"&&i.error(`Error within file "${f}"; script "${_}": ${m}`),_}}))},finalizeBuild(f,F){if(y(f)&&typeof F!="string")return JSON.stringify(F,null,"	")},buildEnd(){b=[]}}},ce=({fileType:n})=>({ignore(e){return(n==null?void 0:n.getId(e))!=="entity"},registerAliases(e,t){var s,i,r,o;if((n==null?void 0:n.getId(e))==="entity"&&((i=(s=t==null?void 0:t["minecraft:entity"])==null?void 0:s.description)==null?void 0:i.identifier))return[(o=(r=t==null?void 0:t["minecraft:entity"])==null?void 0:r.description)==null?void 0:o.identifier]}});function ue(n,e){const t=B(n),s=B(e),i=t.pop(),r=s.pop(),o=L(t,s);return o!==0?o:i&&r?L(i.split("."),r.split(".")):i||r?i?-1:1:0}const de=(n,e,t)=>{fe(t);const s=ue(n,e);return G[t].includes(s)},he=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i,B=n=>{if(typeof n!="string")throw new TypeError("Invalid argument expected string");const e=n.match(he);if(!e)throw new Error(`Invalid argument not valid semver ('${n}' received)`);return e.shift(),e},U=n=>n==="*"||n==="x"||n==="X",V=n=>{const e=parseInt(n,10);return isNaN(e)?n:e},me=(n,e)=>typeof n!=typeof e?[String(n),String(e)]:[n,e],pe=(n,e)=>{if(U(n)||U(e))return 0;const[t,s]=me(V(n),V(e));return t>s?1:t<s?-1:0},L=(n,e)=>{for(let t=0;t<Math.max(n.length,e.length);t++){const s=pe(n[t]||0,e[t]||0);if(s!==0)return s}return 0},G={">":[1],">=":[0,1],"=":[0],"<=":[-1,0],"<":[-1]},K=Object.keys(G),fe=n=>{if(typeof n!="string")throw new TypeError(`Invalid operator type, expected string but got ${typeof n}`);if(K.indexOf(n)===-1)throw new Error(`Invalid operator, expected one of ${K.join("|")}`)},ge=(n,e)=>({register:t=>{var s;((s=t.type)!=null?s:"entity")===e&&(n.component=({name:i,schema:r,template:o})=>{const a=new t;i(t.component_name),r(R(Object.values(a.onPropose())[0])),o((u,{create:l})=>{l(a.onApply(u,"components")[`minecraft:${e}`])})})}});function R(n){const e={},t=Object.keys(n);if(t.length===1&&t[0].startsWith("$dynamic.list."))return{type:"array",items:R(Object.values(n)[0])};for(const[s,i]of Object.entries(n))s.startsWith("$")||(typeof i=="string"?e[s]=ye(i):Array.isArray(i)?e[s]={enum:i}:i==="object"&&(e[s]=R(i)));return{type:"object",properties:e}}function ye(n){switch(n){case"$general.boolean":return{type:"boolean"};case"$general.number":return{type:"integer"};case"$general.decimal":return{type:"number"};default:return{type:["number","integer","string","boolean","object","array"]}}}class X{constructor(e,t,s,i,r,o){this.console=e,this.fileType=t,this.componentSrc=s,this.mode=i,this.v1Compat=r,this.targetVersion=o,this.animations=[],this.animationControllers=[],this.createOnPlayer=[],this.dialogueScenes={},this.serverFiles=[],this.clientFiles={},this.lifecycleHookCount={activated:0,deactivated:0}}setProjectConfig(e){this.projectConfig=e}get name(){return this._name}async load(e,t,s){let i={component:null};const r=await e.run(t,{defineComponent:l=>l,console:this.console,Bridge:this.v1Compat?ge(i,this.fileType):void 0}).catch(l=>(this.console.error(`Failed to execute component "${t}": ${l}`),null));if(!r)return!1;if(typeof r.__default__!="function")if(i.component)r.__default__=i.component;else return this.console.error(`Component ${t} is not a valid component. Expected a function as the default export.`),!1;const o=l=>this._name=l;let a=l=>this.schema=l,u=()=>{};return(!s||s==="server")&&(a=()=>{},u=l=>{this.template=(h,g)=>{try{l(h,g)}catch(d){this.console.log(l.toString()),this.console.error(d)}}}),await r.__default__({name:o,schema:a,template:u}),!0}reset(){this.fileType!=="item"&&(this.animations=[],this.animationControllers=[]),this.clientFiles={},this.serverFiles=[]}getSchema(){return this.schema}toString(){return this.componentSrc}create(e,t,s=`minecraft:${this.fileType}`,i){var u;const r=s.split("/"),o=r.pop(),a=this.getObjAtLocation(e,[...r]);a[o]=(i?(l,h)=>i(A.deepMerge,l,h):A.deepMerge)((u=a[o])!=null?u:{},t!=null?t:{})}getObjAtLocation(e,t){let s=e;for(;t.length>0;){const i=t.shift();s[i]===void 0?s[Number(i)]!==void 0?s=s[Number(i)]:(s[i]={},s=s[i]):s=s[i]}return s}async processTemplates(e,t,s){var F,w,S,_,m,v;if(typeof this.template!="function")return;const i=(S=(w=(F=e[`minecraft:${this.fileType}`])==null?void 0:F.description)==null?void 0:w.identifier)!=null?S:"bridge:no_identifier",r=await A.hashString(`${this.name}/${i}`),o=(v=(m=(_=this.projectConfig)==null?void 0:_.get())==null?void 0:m.namespace)!=null?v:"bridge",a=(c,p)=>(this.animations.push([c,p]),this.getShortAnimName("a",r,this.animations.length-1)),u=(c,p)=>(this.animationControllers.push([c,p]),this.getShortAnimName("ac",r,this.animationControllers.length-1)),l=c=>{const p=`loot_tables/bridge/${this.getShortAnimName("lt",r,this.serverFiles.length)}.json`;return this.serverFiles.push([p,c]),p},h=c=>{const p=`trading/bridge/${this.getShortAnimName("tt",r,this.serverFiles.length)}.json`;return this.serverFiles.push([p,c]),p},g=c=>{this.serverFiles.push([`recipes/bridge/${this.getShortAnimName("recipe",r,this.serverFiles.length)}.json`,c])},d=c=>{this.serverFiles.push([`spawn_rules/bridge/${this.getShortAnimName("sr",r,this.serverFiles.length)}.json`,c])},y=(await A.hashString(`${this.name}/${s}`)).slice(0,16),b=c=>this.registerLifecycleHook(e,s,c,y,"activated"),f=c=>this.registerLifecycleHook(e,s,c,y,"deactivated");this.fileType==="entity"?this.template(t!=null?t:{},{mode:this.mode,compilerMode:this.mode,sourceEntity:()=>JSON.parse(JSON.stringify(e)),create:(c,p,k)=>this.create(e,c,p,k),location:s,identifier:i,projectNamespace:o,animationController:u,animation:a,lootTable:l,tradeTable:h,spawnRule:d,dialogueScene:!this.targetVersion||de(this.targetVersion,"1.17.10",">=")?(c,p=!0)=>{this.dialogueScenes[r]||(this.dialogueScenes[r]=[]),this.dialogueScenes[r].push(c),c.scene_tag&&p&&b({run_command:{command:[`/dialogue open @s @p ${c.scene_tag}`]}})}:void 0,onActivated:b,onDeactivated:f,client:{create:(c,p="1.10.0")=>{this.clientFiles[`entity/bridge/${r}.json`]={format_version:p,"minecraft:client_entity":Object.assign({description:{identifier:i}},c)}}}}):this.fileType==="item"?this.template(t!=null?t:{},{mode:this.mode,compilerMode:this.mode,sourceItem:()=>JSON.parse(JSON.stringify(e)),create:(c,p,k)=>this.create(e,c,p,k),location:s,identifier:i,projectNamespace:o,lootTable:l,recipe:g,player:{animationController:u,animation:a,create:(c,p,k)=>{this.createOnPlayer.push([p!=null?p:"minecraft:entity",c,k])}}}):this.fileType==="block"&&this.template(t!=null?t:{},{mode:this.mode,compilerMode:this.mode,sourceBlock:()=>JSON.parse(JSON.stringify(e)),create:(c,p,k)=>this.create(e,c,p,k),lootTable:l,recipe:g,location:s,identifier:i,projectNamespace:o})}async processAdditionalFiles(e,t,s=!1){var g,d,y,b,f,F;const i=(d=(g=this.projectConfig)==null?void 0:g.getRelativePackRoot("behaviorPack"))!=null?d:"BP",r=(y=this.projectConfig)==null?void 0:y.getRelativePackRoot("resourcePack"),o=s?"minecraft:player":(F=(f=(b=t[`minecraft:${this.fileType}`])==null?void 0:b.description)==null?void 0:f.identifier)!=null?F:"bridge:no_identifier",a=await A.hashString(`${this.name}/${o}`),u=`${i}/animations/bridge/${a}.json`,l=`${i}/animation_controllers/bridge/${a}.json`;o==="minecraft:player"&&this.createOnPlayer.forEach(([w,S,_])=>{this.create(t,S,w,_)}),r||(this.clientFiles={},this.console.error(`[${this.name}] Dash was unable to load the root of your resource pack and therefore cannot generate client files for this component.`));let h={};return(this.fileType!=="item"||o==="minecraft:player")&&(h={[u]:{baseFile:e,fileContent:this.createAnimations(a,t)},[l]:{baseFile:e,fileContent:this.createAnimationControllers(a,t)}}),{...h,[$.join(i,`dialogue/bridge/${a}.json`)]:this.dialogueScenes[a]&&this.dialogueScenes[a].length>0?{baseFile:e,fileContent:JSON.stringify({format_version:this.targetVersion,"minecraft:npc_dialogue":{scenes:this.dialogueScenes[a]}},null,"	")}:void 0,...Object.fromEntries(this.serverFiles.map(([w,S])=>[$.join(i,w),{baseFile:e,fileContent:JSON.stringify(S,null,"	")}])),...Object.fromEntries(Object.entries(this.clientFiles).map(([w,S])=>[$.join(r,w),{baseFile:e,fileContent:JSON.stringify(S,null,"	")}]))}}createAnimations(e,t){if(this.animations.length===0)return;let s=0;const i={format_version:"1.10.0",animations:{}};for(const[r,o]of this.animations){if(!r){s++;continue}const a=this.getAnimName("animation",e,s),u=this.getShortAnimName("a",e,s);i.animations[a]=r,this.create(t,{animations:{[u]:a}},"minecraft:entity/description"),o!==!1&&this.create(t,{scripts:{animate:[o?{[u]:o}:u]}},"minecraft:entity/description"),s++}return JSON.stringify(i,null,"	")}createAnimationControllers(e,t){if(this.animationControllers.length===0)return;let s=0;const i={format_version:"1.10.0",animation_controllers:{}};for(const[r,o]of this.animationControllers){if(!r){s++;continue}const a=this.getAnimName("controller.animation",e,s),u=this.getShortAnimName("ac",e,s);i.animation_controllers[a]=r,this.create(t,{animations:{[u]:a}},"minecraft:entity/description"),o!==!1&&this.create(t,{scripts:{animate:[o?{[u]:o}:u]}},"minecraft:entity/description"),s++}return JSON.stringify(i,null,"	")}getAnimName(e,t,s){return`${e}.${t}_${s}`}getShortAnimName(e,t,s){var i;return`${(i=t.slice(0,16))!=null?i:"bridge_auto"}_${e}_${s}`}registerLifecycleHook(e,t,s,i,r){e[`minecraft:${this.fileType}`].events||(e[`minecraft:${this.fileType}`].events={});const o=e[`minecraft:${this.fileType}`].events;if(r==="activated"&&t===`minecraft:${this.fileType}/components`)o["minecraft:entity_spawned"]||(o["minecraft:entity_spawned"]={}),this.addEventReponse(o["minecraft:entity_spawned"],s);else if(this.fileType==="entity"&&t.startsWith(`minecraft:${this.fileType}/component_groups/`)){const a=t.split("/").pop();this.findComponentGroupReferences(o,r==="activated"?"add":"remove",a).forEach(l=>this.addEventReponse(l,s))}else if(t.startsWith(`minecraft:${this.fileType}/permutations/`)){const a=t.split("/");if(a.pop()!=="components")throw new Error("Invalid component location inside of permutation");const u=this.getObjAtLocation(e,[...a]),l=`bridge:${i}_${r}_${r==="activated"?this.lifecycleHookCount.activated++:this.lifecycleHookCount.deactivated++}`;u.condition&&this.animationControllers.push([{states:{default:{on_entry:[`@s ${l}`]}}},r==="activated"?u.condition:`!(${u.condition})`]),o[l]=s}}addEventReponse(e,t){if(Array.isArray(e.sequence))e.sequence.push(t);else if(Object.keys(e).length===0)Object.assign(e,t);else{let s=Object.assign({},e,{filters:void 0});for(const i in e)i!=="filters"&&(e[i]=void 0);e.sequence=[s,t]}}findComponentGroupReferences(e,t,s){var r,o;let i=[];for(const a in e){const u=e[a];Array.isArray(u.sequence)?i.push(...this.findComponentGroupReferences(u.sequence,t,s)):Array.isArray(u.randomize)?i.push(...this.findComponentGroupReferences(u.randomize,t,s)):((o=(r=u[t])==null?void 0:r.component_groups)!=null?o:[]).includes(s)&&i.push(u)}return i}}function we(n){const e=[];for(const[t,s]of n)e.push(...Fe(s,t));return e}function Fe(n,e){const t=[];for(const s in n)s.startsWith("minecraft:")||s.startsWith("tag:")||t.push([s,e]);return t}function N({fileType:n,getComponentObjects:e}){const t=new Map;let s={};return({console:i,projectConfig:r,projectRoot:o,compileFiles:a,getAliases:u,getAliasesWhere:l,options:h,jsRuntime:g,targetVersion:d,fileType:y,fileSystem:b})=>{let f=null;const F=(c,p)=>{if(!c)return!1;if(f&&c===f)return!0;const k=n==="item"&&(y==null?void 0:y.getId(c))==="entity"&&p(c).includes("minecraft:player");return k&&(f=c),k},w=new Map,S=c=>{if(!c)return!1;if(w.has(c))return w.get(c);const p=h.v1CompatMode?c.includes("/components/"):(y==null?void 0:y.getId(c))==="customComponent"&&c.includes(`/${n}/`);return w.set(c,p),p},_=new Map,m=c=>{if(!c)return!1;if(_.has(c))return _.get(c);const p=(y==null?void 0:y.getId(c))===n;return _.set(c,p),p};let v=!1;return{async buildStart(){var c,p;t.clear(),w.clear(),_.clear(),f=null,s={},v=(await b.allFiles(`${o}${(p=(c=r.get().packs)==null?void 0:c.behaviorPack)==null?void 0:p.substring(1)}/components`)).length>0},ignore(c){return!s[c]&&!S(c)&&!m(c)&&!(n==="item"&&y.getId(c)==="entity")},transformPath(c){if(S(c)&&h.buildType!=="fileRequest")return null},async read(c,p){if(!p)return s[c]?P.default.parse(s[c].fileContent):void 0;if(S(c)){v=!0;const k=await p.getFile();return await(k==null?void 0:k.text())}else if(m(c)||F(c,u)){const k=await p.getFile();if(!k)return;try{return P.default.parse(await k.text())}catch(I){return h.buildType!=="fileRequest"&&i.error(`Error within file "${c}": ${I}`),{__error__:`Failed to load original file: ${I}`}}}},async load(c,p){if(!!v&&S(c)&&typeof p=="string"){const k=new X(i,n,p,h.mode,!!h.v1CompatMode,d);return k.setProjectConfig(r),await k.load(g,c)?k:p}},async registerAliases(c,p){if(!!v&&S(c))return[`${n}Component#${p.name}`]},async require(c,p){if(!!v){if(F(c,u))return l(k=>k.startsWith("itemComponent#"));if(m(c)){const k=we(e(p));return t.set(c,k),k.map(I=>`${n}Component#${I[0]}`)}else if(s[c])return[s[c].baseFile]}},async transform(c,p,k={}){var I;if(!!v){if(F(c,u)){const M=Object.entries(k).filter(([C])=>C.startsWith("itemComponent#")).map(([C,O])=>O);for(const C of M){if(!C)return;s=A.deepMerge(s,await C.processAdditionalFiles(c,p,!0))}}else if(m(c)){const M=new Set;for(const[C,O]of(I=t.get(c))!=null?I:[]){const T=k[`${n}Component#${C}`];if(!T)continue;const te=A.get(p,O.split("/"),{}),ze=te[C];delete te[C],await T.processTemplates(p,ze,O),M.add(T)}for(const C of M)s=A.deepMerge(s,await C.processAdditionalFiles(c,p));for(const C of M)C.reset()}}},finalizeBuild(c,p){if(!!v){if(S(c)&&p)return p.toString();if(m(c)||s[c])return JSON.stringify(p,null,"	")}},async buildEnd(){if(!v||h.buildType==="fileRequest")return;s=Object.fromEntries(Object.entries(s).filter(([p,k])=>(k==null?void 0:k.fileContent)!==void 0).map(([p,k])=>[$.join(o,p),k]));const c=Object.keys(s);c.length>0&&await a(c),s={}}}}}const ke=N({fileType:"entity",getComponentObjects:n=>{var e,t,s,i,r,o;return[["minecraft:entity/components",(t=(e=n==null?void 0:n["minecraft:entity"])==null?void 0:e.components)!=null?t:{}],...Object.entries((i=(s=n==null?void 0:n["minecraft:entity"])==null?void 0:s.component_groups)!=null?i:{}).map(([a,u])=>[`minecraft:entity/component_groups/${a}`,u]),...((o=(r=n==null?void 0:n["minecraft:entity"])==null?void 0:r.permutations)!=null?o:[]).map((a,u)=>{var l;return[`minecraft:entity/permutations/${u}/components`,(l=a==null?void 0:a.components)!=null?l:{}]})]}}),ve=N({fileType:"item",getComponentObjects:n=>{var e,t;return[["minecraft:item/components",(t=(e=n==null?void 0:n["minecraft:item"])==null?void 0:e.components)!=null?t:{}]]}}),be=N({fileType:"block",getComponentObjects:n=>{var e,t,s,i;return[["minecraft:block/components",(t=(e=n==null?void 0:n["minecraft:block"])==null?void 0:e.components)!=null?t:{}],...((i=(s=n==null?void 0:n["minecraft:block"])==null?void 0:s.permutations)!=null?i:[]).map((r,o)=>{var a;return[`minecraft:block/permutations/${o}/components`,(a=r.components)!=null?a:{}]})]}});function W(n,e,t,s=0){const i=[];for(const r of n){if(!r.startsWith("/")){i.push(r);continue}const[o,...a]=A.tokenizeCommand(r.slice(1)).tokens.map(({word:l})=>l),u=e[`command#${o}`];if(o==="execute"){let l=4;if(a[l]==="detect"&&(l+=6),a[l]===void 0){i.push(r);continue}const[h,...g]=a.slice(l),d=e[`command#${h}`];if(!(d instanceof q)){i.push(r);continue}i.push(...d.process(`${h} ${g.join(" ")}`,e,s+1).map(y=>y.startsWith("/")?`/execute ${a.slice(0,l).join(" ")} ${y.slice(1)}`:y));continue}else if(!(u instanceof q)){i.push(r);continue}i.push(...u.process(r,e,s))}return i.filter(r=>t||!r.startsWith("#")).map(r=>r.trim())}const Se=n=>({register:e=>{n.command=({name:t,schema:s,template:i})=>{t(e.command_name),s([]),i(r=>new e().onApply(r))}}});class q{constructor(e,t,s,i){this.console=e,this.commandSrc=t,this.mode=s,this.v1Compat=i}get name(){var e;return(e=this._name)!=null?e:"unknown"}async load(e,t,s){const i={command:null},r=await e.run(t,{console:this.console,defineCommand:l=>l,Bridge:this.v1Compat?Se(i):void 0}).catch(l=>(this.console.error(`Failed to execute command ${this.name}: ${l}`),null));if(!r)return null;if(typeof r.__default__!="function")if(i.command)r.__default__=i.command;else return this.console.error(`Component ${t} is not a valid component. Expected a function as the default export.`),!1;const o=l=>this._name=l;let a=l=>this.schema=l,u=()=>{};(!s||s==="server")&&(a=()=>{},u=l=>{this.template=(h,g)=>{try{return l(h,g)}catch(d){return this.console.error(d),[]}}}),await r.__default__({name:o,schema:a,template:u})}process(e,t,s){var u;e.startsWith("/")&&(e=e.slice(1));const[i,...r]=A.tokenizeCommand(e).tokens.map(({word:l})=>l),o=(u=this.template)==null?void 0:u.call(this,r.map(l=>A.castType(l)),{compilerMode:this.mode,commandNestingDepth:s,compileCommands:l=>W(l.map(h=>h.startsWith("/")?h:`/${h}`),t,!1,s+1).map(h=>h.startsWith("/")?h.slice(1):h)});let a=[];if(typeof o=="string")a=o.split(`
`);else if(Array.isArray(o))a=o.filter(l=>typeof l=="string");else{const l=`Failed to process command ${this._name}; Invalid command template return type: Expected string[] or string, received ${typeof o}`;this.console.error(l),a.push(`# ${l}`)}return a.map(l=>l.startsWith("/")||l.startsWith("#")?l:`/${l}`)}getSchema(){if(this.schema){if(Array.isArray(this.schema))return this.schema.length===0?[{commandName:this.name}]:this.schema.map(e=>({commandName:this.name,...e}))}else return[{commandName:this.name}];return this.schema.commandName||(this.schema.commandName=this.name),[this.schema]}toString(){return this.commandSrc}}const $e=({projectConfig:n,jsRuntime:e,console:t,fileType:s,requestJsonData:i,options:r})=>{const o=(d,y)=>n.resolvePackPath(d,y),a=d=>d&&s.getId(d)==="customCommand",u=d=>d&&s.getId(d)==="function",l=new Map,h=d=>{if(l.has(d))return l.get(d);const y=r.include[s.getId(d)];return l.set(d,y),y},g=d=>{var y,b,f;return(f=(b=(y=s.get(d))==null?void 0:y.meta)==null?void 0:b.commandsUseSlash)!=null?f:!1};return{async buildStart(){r.include=Object.assign(await i("data/packages/minecraftBedrock/location/validCommand.json"),r.include),l.clear()},ignore(d){return!a(d)&&!u(d)&&!h(d)},transformPath(d){if(a(d)&&r.buildType!=="fileRequest")return null},async read(d,y){if(!!y){if(a(d)&&d.endsWith(".js")){const b=await y.getFile();return await(b==null?void 0:b.text())}else if(u(d)){const b=await y.getFile();return await(b==null?void 0:b.text())}else if(h(d)&&y){const b=await y.getFile();if(!b)return;try{return P.default.parse(await b.text())}catch(f){t.error(f)}}}},async load(d,y){var b;if(a(d)){const f=new q(t,y,r.mode,(b=r.v1CompatMode)!=null?b:!1);return await f.load(e,d),f}},async registerAliases(d,y){if(a(d))return[`command#${y.name}`]},async require(d){if(h(d)||u(d))return[o("behaviorPack","commands/**/*.[jt]s"),o("behaviorPack","commands/*.[jt]s")]},async transform(d,y,b={}){const f=h(d);if(f&&f.length>0){const F=g(d);f.forEach(w=>A.setObjectAt(w,y,S=>{if(!S)return S;S=Array.isArray(S)?S:[S];const _=[];for(const m of S){if(typeof m=="string"){_.push(m);continue}t.error(`The file "${d}" contains invalid commands. Expected type "string" within array but got type "${typeof m}"`)}return W(_.map(m=>!F&&!m.startsWith("/")?`/${m}`:m),b,!1).map(m=>F?m:m.slice(1))}))}else if(u(d)){const F=y.split(`
`).map(w=>w.trim()).filter(w=>w!==""&&!w.startsWith("#")).map(w=>`/${w}`);return W(F,b,!0).map(w=>w.startsWith("/")?w.slice(1):w).join(`
`)}},finalizeBuild(d,y){if(a(d)&&y)return y.toString();if(h(d)&&typeof y!="string")return JSON.stringify(y,null,"	")}}},_e=({options:n})=>({ignore(e){return!e.endsWith(".ts")},async transformPath(e){if(!!(e!=null&&e.endsWith(".ts")))return`${e.slice(0,-3)}.js`},async read(e,t){if(!e.endsWith(".ts")||!t)return;const s=await t.getFile();return await(s==null?void 0:s.text())},async load(e,t){if(!(!e.endsWith(".ts")||t===null))return await x.loadedWasm,ie.transformSync(t,{filename:$.basename(e),sourceMaps:n!=null&&n.inlineSourceMap?"inline":void 0,jsc:{parser:{syntax:"typescript",preserveAllComments:!1,topLevelAwait:!0},target:"es2020"}}).code},finalizeBuild(e,t){if(e.endsWith(".ts")&&typeof t=="string")return t}}),je=({options:n,outputFileSystem:e,projectRoot:t,packType:s,fileType:i,console:r})=>{n.packName||(n.packName="bridge project");const o=h=>h.split(/\\|\//g).filter(g=>g!==".."&&g!==".").slice(1).join("/"),a=h=>{const g=s.getId(h),d=$.relative(t,h);if(g==="behaviorPack"||g==="resourcePack"||g==="skinPack")return $.join(t,"builds/dist",g,o(d))},u=h=>{const g=s.getId(h),d=$.relative(t,h);if(g==="worldTemplate")return $.join(t,"builds/dist",o(d));if(g==="behaviorPack"||g==="resourcePack")return $.join(t,"builds/dist",g==="behaviorPack"?"behavior_packs":"resource_packs",n.packName,o(d))},l=h=>i.getId(h)==="worldManifest"?null:u(h);return{async buildStart(){await e.unlink(`${t}/builds/dist`).catch(()=>{})},transformPath(h){if(!!h)switch(n.format){case"mcaddon":return a(h);case"mcworld":return l(h);case"mctemplate":return u(h);default:r.error(`Unknown packaging format: ${n.format}`)}}}},Ce=({projectConfig:n,packType:e,options:t})=>{const s=Object.keys(n.getAvailablePacks()),i=Object.fromEntries(s.map(o=>[o,[]])),r=o=>{const a=e.getId(o);if(a!=="unknown")return[a,n.resolvePackPath(a,"contents.json")]};return t.buildType!=="fullBuild"?{}:{include(){return s.map(o=>[n.resolvePackPath(o,"contents.json"),{isVirtual:!0}])},read(o){const a=r(o);if(!a)return;const[u,l]=a;if(o!==l)return i[u]},transformPath(o){if(!o)return;const a=e.getId(o);a!=="unknown"&&i[a].push(o)},finalizeBuild(o){const a=r(o);if(!a)return;const[u,l]=a;if(o!==l)return JSON.stringify(i[u])}}},Ae=({fileType:n})=>{const e=new Set;for(const i of n.all)i.formatVersionMap&&e.add(i.id);const t=new Map,s=i=>{if(!i)return;let r=t.get(i);return r||(r=e.has(n.getId(i)),t.set(i,r),r)};return{ignore(i){return!s(i)},async read(i,r){if(!!r&&s(i)){const o=await r.getFile();if(!o)return;try{return P.default.parse(await o.text())}catch(a){console.error(a)}}},load(i,r){if(s(i))return r},transform(i,r){if(s(i)){const o=n.get(i),a=o==null?void 0:o.formatVersionMap;if(!a)return;const u=r==null?void 0:r.format_version;return u&&a[u]&&(r.format_version=a[u]),r}},finalizeBuild(i,r){if(s(i))return JSON.stringify(r)}}};class Ie{constructor(e){this.console=e,this.__isCollection=!0,this.files=new Map}get hasFiles(){return this.files.size>0}getAll(){return[...this.files.entries()]}get(e){return this.files.get(e)}clear(){this.files.clear()}add(e,t){if(this.files.has(e)){this.console.warn(`Omitting file "${e}" from collection because it would overwrite a previously generated file!`);return}this.files.set(e,t)}has(e){return this.files.has(e)}addFrom(e,t){for(const[s,i]of e.getAll()){const r=t?$.join(t,s):s;this.add(r,i)}}}var Te=`import { dirname, join } from 'path-browserify'\r
import type { FileSystem } from '../../../FileSystem/FileSystem'\r
import type { Console } from '../../../Common/Console'\r
// @ts-expect-error\r
import { Collection } from '@bridge-interal/collection'\r
\r
declare const __fileSystem: FileSystem\r
declare const console: Console\r
declare const __omitUsedTemplates: Set<string>\r
declare const __baseDirectory: string\r
\r
export interface IModuleOpts {\r
	generatorPath: string\r
	omitUsedTemplates: Set<string>\r
	fileSystem: FileSystem\r
	console: Console\r
}\r
\r
interface IUseTemplateOptions {\r
	omitTemplate?: boolean\r
}\r
\r
export function useTemplate(\r
	filePath: string,\r
	{ omitTemplate = true }: IUseTemplateOptions = {}\r
) {\r
	const templatePath = join(__baseDirectory, filePath)\r
	if (omitTemplate) __omitUsedTemplates.add(templatePath)\r
\r
	// TODO(@solvedDev): Pipe file through compileFile API\r
	if (filePath.endsWith('.json')) return __fileSystem.readJson(templatePath)\r
	else return __fileSystem.readFile(templatePath).then((file) => file.text())\r
}\r
\r
export function createCollection() {\r
	return new Collection(console)\r
}\r
`,Me=`import { join } from 'path-browserify'\r
import { Console } from '../../../Common/Console'\r
\r
export class Collection {\r
	public readonly __isCollection = true\r
	protected files = new Map<string, any>()\r
	constructor(protected console: Console) {}\r
\r
	get hasFiles() {\r
		return this.files.size > 0\r
	}\r
\r
	getAll() {\r
		return [...this.files.entries()]\r
	}\r
\r
	get(filePath: string) {\r
		return this.files.get(filePath)\r
	}\r
\r
	clear() {\r
		this.files.clear()\r
	}\r
	add(filePath: string, fileContent: any) {\r
		if (this.files.has(filePath)) {\r
			this.console.warn(\r
				\`Omitting file "\${filePath}" from collection because it would overwrite a previously generated file!\`\r
			)\r
			return\r
		}\r
		this.files.set(filePath, fileContent)\r
	}\r
	has(filePath: string) {\r
		return this.files.has(filePath)\r
	}\r
	addFrom(collection: Collection, baseDir?: string) {\r
		for (const [filePath, fileContent] of collection.getAll()) {\r
			const resolvedPath = baseDir ? join(baseDir, filePath) : filePath\r
			this.add(resolvedPath, fileContent)\r
		}\r
	}\r
}\r
`;const Oe=({options:n,fileType:e,console:t,jsRuntime:s,fileSystem:i,compileFiles:r,getFileMetadata:o,unlinkOutputFiles:a,addFileDependencies:u})=>{var _;const l=new Set(["gameTest","customCommand","customComponent","molangAstScript",...(_=n.ignoredFileTypes)!=null?_:[]]),h=m=>e.getId(m),g=m=>{var c;const v=e.get(m,void 0,!1);return v?(c=v.type)!=null?c:"json":"raw"},d=m=>!l.has(h(m))&&(m.endsWith(".js")||m.endsWith(".ts")),y=m=>{var c,p,k,I;return g(m)==="json"?".json":(I=(k=(p=(c=e.get(m,void 0,!1))==null?void 0:c.detect)==null?void 0:p.fileExtensions)==null?void 0:k[0])!=null?I:".txt"},b=m=>m.replace(/\.(js|ts)$/,y(m)),f=new Set,F=new Ie(t),w=new Set,S=new Map;return{buildStart(){F.clear(),f.clear(),w.clear(),S.clear(),s.registerModule("@bridge-interal/collection",Me),s.registerModule("@bridge/generate",Te),s.registerModule("path-browserify",{dirname:$.dirname,join:$.join})},ignore(m){return!d(m)&&!f.has(m)&&!F.has(m)},transformPath(m){if(m&&d(m))return b(m)},async read(m,v){if(d(m)&&v){const p=await v.getFile();return p?p.text():void 0}const c=F.get(m);if(c)return c},async load(m,v){var C,O;if(!d(m))return;if(!v)return null;const c=new Set,p=await s.run(m,{console:t,__baseDirectory:$.dirname(m),__omitUsedTemplates:f,__fileSystem:i},v).catch(T=>(t.error(`Failed to execute generator script "${m}": ${T}`),null));if(!p)return null;if(!p.__default__)return t.error(`Expected generator script "${m}" to provide file content as default export!`),null;const k=o(m);((C=k.get("unlinkedFiles"))!=null?C:[]).filter(T=>!c.has(T)).forEach(T=>w.add(T)),k.set("unlinkedFiles",[...c]);const M=(O=k.get("generatedFiles"))!=null?O:[];return await a([...M,...c]).catch(()=>{}),S.set(m,c),p.__default__},require(m){const v=S.get(m);if(v)return[...v]},finalizeBuild(m,v){if(F.get(m))return m.endsWith(".json")&&typeof v!="string"?JSON.stringify(v,null,"	"):v;if(f.has(m))return null;if(d(m)){if(v===null)return null;const c=o(m);return v.__isCollection?(F.addFrom(v,$.dirname(m)),c.set("generatedFiles",v.getAll().map(([p])=>p)),null):(c.set("generatedFiles",[b(m)]),typeof v=="object"?JSON.stringify(v):v)}},async buildEnd(){s.deleteModule("@bridge/generate"),s.deleteModule("@bridge-interal/collection"),s.deleteModule("path-browserify"),w.size>0&&await r([...w].filter(m=>!F.has(m)),!1),F.hasFiles&&await r(F.getAll().map(([m])=>m))},async beforeFileUnlinked(m){var v,c;if(d(m)){let p=null;try{p=o(m)}catch{}if(!p)return;const k=(v=p.get("unlinkedFiles"))!=null?v:[],I=(c=p.get("generatedFiles"))!=null?c:[];await a(I),await r(k)}}}};class Q extends x.Runtime{constructor(e,t){super(t),this.fs=e}readFile(e){return this.fs.readFile(e)}deleteModule(e){this.baseModules.delete(e)}}const Y={simpleRewrite:le,rewriteForPackaging:je,moLang:z,molang:z,entityIdentifierAlias:ce,customEntityComponents:ke,customItemComponents:ve,customBlockComponents:be,customCommands:$e,typeScript:_e,contentsFile:Ce,formatVersionCorrection:Ae,generatorScripts:Oe},Pe=["buildStart","buildEnd","include","ignore","transformPath","read","load","registerAliases","require","transform","finalizeBuild","beforeFileUnlinked"];class He{constructor(e){this.dash=e,this.implementedHooks=new Map,this.pluginRuntime=new Q(this.dash.fileSystem)}pluginsFor(e,t){var s,i;return t?(s=t.myImplementedHooks.get(e))!=null?s:[]:(i=this.implementedHooks.get(e))!=null?i:[]}getImplementedHooks(){return this.implementedHooks}async loadPlugins(e={}){var u;this.implementedHooks.clear(),this.pluginRuntime.clearCache();const t=[...(await this.dash.fileSystem.readdir($.join(this.dash.projectRoot,".bridge/extensions")).catch(()=>[])).map(l=>l.kind==="directory"?$.join(this.dash.projectRoot,".bridge/extensions",l.name):void 0),...(await this.dash.fileSystem.readdir("extensions").catch(()=>[])).map(l=>l.kind==="directory"?$.join("extensions",l.name):void 0)],s={},i=[];for(const l of t)!l||i.push(this.dash.fileSystem.readJson($.join(l,"manifest.json")).then(h=>{var g;if(!!((g=h==null?void 0:h.compiler)!=null&&g.plugins))for(const d in h.compiler.plugins)s[d]=$.join(l,h.compiler.plugins[d])}).catch(()=>{}));await Promise.all(i);const r=(u=(await this.getCompilerOptions()).plugins)!=null?u:[],o=[],a=[];for(let l=0;l<r.length;l++){const h=r[l],g=typeof h=="string"?h:h[0];s[g]?a.push(this.pluginRuntime.run(s[g],{console:this.dash.console,...e}).catch(d=>(this.dash.console.error(`Failed to execute plugin ${g}: ${d}`),null)).then(d=>{!d||(typeof d.__default__=="function"?o[l]=d.__default__:(o[l]=null,this.dash.console.error(`Plugin ${g} is invalid: It does not provide a function as a default export.`)))})):Y[g]?o[l]=Y[g]:(o[l]=null,this.dash.console.error(`Unknown compiler plugin: ${g}`))}await Promise.all(a);for(let l=0;l<r.length;l++){const h=o[l];if(!h)continue;const g=r[l],d=typeof g=="string"?{}:g[1],y=typeof g=="string"?g:g[0];this.addPlugin(y,h,d)}}async addPlugin(e,t,s){const i=new ae(this.dash,e,await t(this.getPluginContext(e,s)));for(const r of Pe)if(i.implementsHook(r)){let o=this.implementedHooks.get(r);o||(o=[],this.implementedHooks.set(r,o)),o.push(i)}}async getCompilerOptions(){var t;const e=await this.dash.getCompilerConfigPath();return e?await this.dash.fileSystem.readJson(e):(t=this.dash.projectConfig.get().compiler)!=null?t:{}}getPluginContext(e,t={}){const s=this.dash;return{options:{get mode(){return s.getMode()},get buildType(){return s.buildType},...t},jsRuntime:this.dash.jsRuntime,console:this.dash.console,fileSystem:this.dash.fileSystem,outputFileSystem:this.dash.outputFileSystem,projectConfig:this.dash.projectConfig,projectRoot:this.dash.projectRoot,packType:this.dash.packType,fileType:this.dash.fileType,targetVersion:this.dash.projectConfig.get().targetVersion,requestJsonData:this.dash.requestJsonData,getAliases:i=>{var r,o;return[...(o=(r=this.dash.includedFiles.get(i))==null?void 0:r.aliases)!=null?o:[]]},getAliasesWhere:i=>this.dash.includedFiles.getAliasesWhere(i),getFileMetadata:i=>{const r=this.dash.includedFiles.get(i);if(!r)throw new Error(`File ${i} to get metadata from not found`);return{get(o){return r.getMetadata(o)},set(o,a){r.addMetadata(o,a)},delete(o){r.deleteMetadata(o)}}},addFileDependencies:(i,r,o=!1)=>{const a=this.dash.includedFiles.get(i);if(!a)throw new Error(`File ${i} to add dependency to not found`);o?a.setRequiredFiles(new Set(r)):r.forEach(u=>a.addRequiredFile(u))},getOutputPath:i=>this.dash.getCompilerOutputPath(i),unlinkOutputFiles:i=>this.dash.unlinkMultiple(i,!1,!0),hasComMojangDirectory:this.dash.fileSystem!==this.dash.outputFileSystem,compileFiles:(i,r=!0)=>this.dash.compileAdditionalFiles(i,r)}}async runBuildStartHooks(){await Promise.all(this.pluginsFor("buildStart").map(e=>e.runBuildStartHook()))}async runIncludeHooks(){let e=[];for(const t of this.pluginsFor("include")){const s=await t.runIncludeHook();Array.isArray(s)&&e.push(...s)}return e}async runIgnoreHooks(e){for(const t of this.pluginsFor("ignore"))await t.runIgnoreHook(e.filePath)&&e.addIgnoredPlugin(t.pluginId);e.createImplementedHooksMap()}async runTransformPathHooks(e){let t=e.filePath;for(const s of this.pluginsFor("transformPath")){const i=await s.runTransformPathHook(t);if(i===null)return null;i!==void 0&&(t=i)}return t}async runReadHooks(e){for(const t of this.pluginsFor("read",e)){const s=await t.runReadHook(e.filePath,e.fileHandle);if(s!=null)return s}}async runLoadHooks(e){let t=e.data;for(const s of this.pluginsFor("load",e)){const i=await s.runLoadHook(e.filePath,t);i!==void 0&&(t=i)}return t}async runRegisterAliasesHooks(e){const t=new Set;for(const s of this.pluginsFor("registerAliases",e)){const i=await s.runRegisterAliasesHook(e.filePath,e.data);i!=null&&(Array.isArray(i)?i.forEach(r=>t.add(r)):t.add(i))}return t}async runRequireHooks(e){const t=new Set;for(const s of this.pluginsFor("require",e)){const i=await s.runRequireHook(e.filePath,e.data);i!=null&&(Array.isArray(i)?i.forEach(r=>t.add(r)):t.add(i))}return t}async runTransformHooks(e){const t=Object.fromEntries([...e.requiredFiles].map(i=>this.dash.includedFiles.query(i)).flat().map(i=>[[i.filePath,i.data],...[...i.aliases].map(r=>[r,i.data])]).flat());let s=e.data;for(const i of this.pluginsFor("transform",e)){const r=await i.runTransformHook(e.filePath,s,t);r!==void 0&&(s=r)}return s}async runFinalizeBuildHooks(e){for(const t of this.pluginsFor("finalizeBuild",e)){const s=await t.runFinalizeBuildHook(e.filePath,e.data);if(s!==void 0)return s}}async runBuildEndHooks(){await Promise.allSettled(this.pluginsFor("buildEnd").map(e=>e.runBuildEndHook()))}async runBeforeFileUnlinked(e){for(const t of this.pluginsFor("beforeFileUnlinked"))await t.runBeforeFileUnlinked(e)}}class D{constructor(e,t,s=!1){this.dash=e,this.filePath=t,this.isVirtual=s,this.isDone=!1,this.requiredFiles=new Set,this.aliases=new Set,this.updateFiles=new Set,this.metadata=new Map,this.ignoredByPlugins=new Set,this._myImplementedHooks=null,this._cachedFile=null,this.outputPath=t,this.isVirtual||this.setDefaultFileHandle()}isIgnoredBy(e){return this.ignoredByPlugins.has(e)}addIgnoredPlugin(e){this.ignoredByPlugins.add(e)}createImplementedHooksMap(){var s;this._myImplementedHooks=new Map;for(const[i,r]of this.dash.plugins.getImplementedHooks()){const o=r.filter(a=>!this.isIgnoredBy(a.pluginId));this._myImplementedHooks.set(i,o)}((s=this.myImplementedHooks.get("read"))!=null?s:[]).length>0&&(this._cachedFile=this.dash.fileSystem.readFile(this.filePath).catch(()=>null))}get myImplementedHooks(){if(this._myImplementedHooks)return this._myImplementedHooks;throw new Error("Tried to access implemented hooks before they were created")}setFileHandle(e){this.fileHandle=e}setDefaultFileHandle(){this.setFileHandle({getFile:()=>this._cachedFile})}setOutputPath(e){this.outputPath=e}setReadData(e){this.data=e}setAliases(e){for(const t of e)this.dash.includedFiles.addAlias(t,this);this.aliases=e}setRequiredFiles(e){this.requiredFiles=e}addRequiredFile(e){this.requiredFiles.add(e)}setUpdateFiles(e){this.updateFiles=new Set(e.map(t=>this.dash.includedFiles.get(t)).filter(t=>t!==void 0))}addUpdateFile(e){this.updateFiles.add(e)}removeUpdateFile(e){this.updateFiles.delete(e)}setMetadata(e){typeof e=="object"&&(this.metadata=new Map(Object.entries(e)))}addMetadata(e,t){this.metadata.set(e,t)}deleteMetadata(e){this.metadata.delete(e)}getMetadata(e){return this.metadata.get(e)}getAllMetadata(){return Object.fromEntries(this.metadata.entries())}getHotUpdateChain(){const e=new Set([this]);for(const t of this.updateFiles)t.getHotUpdateChain().forEach(s=>{e.add(s)});return e}filesToLoadForHotUpdate(e=new Set,t=!0){const s=new Set;if(e.has(this))return s;e.add(this);for(const i of this.requiredFiles){const r=this.dash.includedFiles.query(i);for(const o of r)o.filesToLoadForHotUpdate(e,!1).forEach(a=>{s.add(a)})}if(s.add(this),t)for(const i of this.updateFiles)i.filesToLoadForHotUpdate(e,!0).forEach(r=>{s.add(r)});return s}processAfterLoad(e,t){(this.data===null||this.data===void 0)&&(this.isDone=!0,this.filePath!==this.outputPath&&this.outputPath!==null&&!this.isVirtual&&e&&t.push(this.dash.fileSystem.copyFile(this.filePath,this.outputPath,this.dash.outputFileSystem)))}serialize(){return{isVirtual:this.isVirtual,filePath:this.filePath,aliases:[...this.aliases],requiredFiles:[...this.requiredFiles],updateFiles:[...this.updateFiles].map(e=>e.filePath),metadata:this.metadata.size>0?Object.fromEntries(this.metadata.entries()):void 0}}reset(){this.isDone=!1,this.data=null,this._myImplementedHooks=null,this._cachedFile=null,this.isVirtual||this.setDefaultFileHandle()}}class Ee{constructor(e){this.dash=e,this.files=new Map,this.aliases=new Map,this.queryCache=new Map}all(){return[...this.files.values()]}filtered(e){return this.all().filter(t=>e(t))}get(e){var t;return(t=this.aliases.get(e))!=null?t:this.files.get(e)}getFromFilePath(e){return this.files.get(e)}query(e){const t=this.aliases.get(e);if(t)return[t];const s=this.files.get(e);return s?[s]:ne.default(e)?this.queryGlob(e):[]}addAlias(e,t){this.aliases.set(e,t)}getAliasesWhere(e){return[...this.aliases.keys()].filter(e)}queryGlob(e){if(this.queryCache.has(e))return this.queryCache.get(e);const t=this.filtered(s=>A.isMatch(s.filePath,e));return this.queryCache.set(e,t),t}async loadAll(){this.dash.console.time("Load all files"),this.queryCache=new Map;const e=new Set,t=this.dash.projectConfig.getAvailablePackPaths(),s=[];for(const r of t)s.push(this.dash.fileSystem.allFiles(r).catch(o=>(this.dash.console.warn(o),[])).then(o=>{for(const a of o)e.add(a)}));await Promise.all(s);const i=await this.dash.plugins.runIncludeHooks();for(const r of i)typeof r=="string"?e.add(r):this.addOne(r[0],r[1].isVirtual);this.add([...e]),this.dash.console.timeEnd("Load all files")}addOne(e,t=!1){const s=new D(this.dash,e,t);return this.files.set(e,s),s}add(e,t=!1){let s=[];for(const i of e){const r=this.files.get(i);if(r){s.push(r);continue}s.push(new D(this.dash,i,t)),this.files.set(i,s[s.length-1])}return s}remove(e){const t=this.files.get(e);if(!!t){this.files.delete(e);for(const s of t.aliases)this.aliases.delete(s)}}async save(e){await this.dash.fileSystem.writeJson(e,this.all().map(t=>t.serialize()))}async load(e){this.removeAll();const t=await this.dash.fileSystem.readJson(e).catch(()=>null),s=[];if(!!t){for(const i of t){const r=new D(this.dash,i.filePath,i.isVirtual);r.setAliases(new Set(i.aliases)),r.setRequiredFiles(new Set(i.requiredFiles)),r.setMetadata(i.metadata),r.createImplementedHooksMap(),s.push(r);for(const o of i.aliases)this.aliases.set(o,r)}this.files=new Map(s.map(i=>[i.filePath,i]));for(let i=0;i<s.length;i++)s[i].setUpdateFiles(t[i].updateFiles)}}resetAll(){for(const e of this.all())e.reset()}removeAll(){this.files=new Map,this.aliases=new Map,this.queryCache=new Map}}class qe{constructor(e){this.dash=e,this.copyFilePromises=[]}async run(e,t=!0){this.copyFilePromises=[];let s=[];for(const i of e)i.isDone||s.push(this.loadFile(i,t));await Promise.allSettled(s),await Promise.allSettled(e.map(async i=>{const r=await this.dash.plugins.runRequireHooks(i);i.setRequiredFiles(r)}))}async loadFile(e,t=!0){var a;const[s,i]=await Promise.all([this.dash.plugins.runIgnoreHooks(e),this.dash.plugins.runTransformPathHooks(e)]),r=await this.dash.plugins.runReadHooks(e);if(e.setOutputPath(i),e.setReadData(r),e.processAfterLoad(t,this.copyFilePromises),e.isDone)return;e.setReadData((a=await this.dash.plugins.runLoadHooks(e))!=null?a:e.data);const o=await this.dash.plugins.runRegisterAliasesHooks(e);e.setAliases(o)}async awaitAllFilesCopied(){this.copyFilePromises.length!==0&&(await Promise.allSettled(this.copyFilePromises),this.copyFilePromises=[])}}class De{constructor(e){this.dash=e}run(e){const t=new Set;for(const s of e)s.isDone||t.has(s)||this.resolveSingle(s,t);return t}resolveSingle(e,t,s=new Set){const i=this.dash.includedFiles;s.add(e);for(const r of e.requiredFiles){const o=i.query(r);for(const a of o){if(!a){this.dash.console.error(`Undefined file dependency: "${e.filePath}" requires "${r}"`);continue}if(a.addUpdateFile(e),!t.has(a)){if(s.has(a)){this.dash.console.error(`Circular dependency detected: ${a.filePath} is required by ${e.filePath} but also depends on this file.`);continue}this.resolveSingle(a,t,s)}}}t.add(e),s.delete(e)}}function xe(n){return typeof n=="string"||n instanceof Blob||n instanceof File||n instanceof ArrayBuffer||(n==null?void 0:n.buffer)instanceof ArrayBuffer}class Re{constructor(e){this.dash=e}async run(e,t=!1){const s=[];for(const i of e){if(i.isDone)continue;let r=await this.transformFile(i,!0,t);r!=null&&i.outputPath!==null&&i.filePath!==i.outputPath&&s.push(this.dash.outputFileSystem.writeFile(i.outputPath,r))}await Promise.allSettled(s)}async transformFile(e,t=!1,s=!1){var r;if(s||(e.data=(r=await this.dash.plugins.runTransformHooks(e))!=null?r:e.data),!t)return e.data;let i=await this.dash.plugins.runFinalizeBuildHooks(e);return i===void 0&&(i=e.data),i!=null&&(xe(i)||(this.dash.console.warn(`File "${e.filePath}" was not in a writable format: "${typeof i}". Trying to JSON.stringify(...) it...`,i),i=JSON.stringify(i))),e.isDone=!0,i}}class Ne{constructor(e=1){this.total=e,this.current=0,this.onChangeCbs=new Set}get percentage(){return this.current/this.total}onChange(e){return this.onChangeCbs.add(e),{dispose:()=>this.onChangeCbs.delete(e)}}setTotal(e){this.total=e,this.current=0,this.onChangeCbs.forEach(t=>t(this))}updateCurrent(e){this.current=e,this.onChangeCbs.forEach(t=>t(this))}advance(){this.current++,this.onChangeCbs.forEach(e=>e(this))}addToTotal(e){this.total+=e,this.onChangeCbs.forEach(t=>t(this))}}class Z{constructor(e=!1){this.verboseLogs=e,this._timers=new Map}time(e){if(!!this.verboseLogs)if(this._timers.has(e)){this.warn(`Timer "${e}" already exists.`);return}else this._timers.set(e,Date.now())}timeEnd(e){if(!this.verboseLogs)return;const t=this._timers.get(e);if(t)this._timers.delete(e),this.log(`${e}: ${Date.now()-t}ms`);else{this.warn(`Timer "${e}" does not exist.`);return}}}class ee extends Z{constructor(e){super(e)}log(...e){console.log(...e)}error(...e){console.error(...e)}warn(...e){console.warn(...e)}info(...e){console.info(...e)}}class We{constructor(e,t,s){var i;this.fileSystem=e,this.options=s,this.progress=new Ne,this.plugins=new He(this),this.includedFiles=new Ee(this),this.loadFiles=new qe(this),this.fileOrderResolver=new De(this),this.fileTransformer=new Re(this),this.buildType="fullBuild",this.outputFileSystem=t!=null?t:e,this.projectRoot=$.dirname(s.config),this.projectConfig=new oe(e,s.config),this.console=(i=s.console)!=null?i:new ee(s.verbose),this.jsRuntime=new Q(this.fileSystem,[["@molang/expressions",E.expressions],["@molang/core",{MoLang:E.MoLang}],["molang",{MoLang:E.MoLang,...E.expressions}],["@bridge/compiler",{mode:s.mode}]]),this.packType=s.packType,this.fileType=s.fileType}getMode(){var e;return(e=this.options.mode)!=null?e:"development"}getCompilerConfigPath(){return this.options.compilerConfig}get requestJsonData(){return this.options.requestJsonData}get dashFilePath(){return $.join(this.projectRoot,`.bridge/.dash.${this.getMode()}.json`)}async setup(e){var t,s,i,r;try{await this.projectConfig.setup()}catch(o){this.console.error("Failed to load project config: "+o)}(t=this.fileType)==null||t.setProjectConfig(this.projectConfig),(s=this.packType)==null||s.setProjectConfig(this.projectConfig),await((i=this.fileType)==null?void 0:i.setup(e)),await((r=this.packType)==null?void 0:r.setup(e)),await this.plugins.loadPlugins(this.options.pluginEnvironment)}async reload(){try{await this.projectConfig.refreshConfig()}catch{}await this.plugins.loadPlugins(this.options.pluginEnvironment)}get isCompilerActivated(){const e=this.projectConfig.get();return e.compiler!==void 0&&Array.isArray(e.compiler.plugins)}async build(){if(this.console.log("Starting compilation..."),!this.isCompilerActivated)return;this.jsRuntime.clearCache(),this.buildType="fullBuild",this.includedFiles.removeAll();const e=Date.now();this.progress.setTotal(7),this.console.time("[HOOK] Build start"),await this.plugins.runBuildStartHooks(),this.console.timeEnd("[HOOK] Build start"),this.progress.advance(),await this.includedFiles.loadAll(),this.progress.advance(),await this.compileIncludedFiles(),this.console.time("[HOOK] Build end"),await this.plugins.runBuildEndHooks(),this.console.timeEnd("[HOOK] Build end"),this.progress.advance(),this.getMode()==="development"&&await this.saveDashFile(),this.includedFiles.resetAll(),this.progress.advance(),this.console.log(`Dash compiled ${this.includedFiles.all().length} files in ${Date.now()-e}ms!`)}async updateFiles(e,t=!0){var a;if(!this.isCompilerActivated||e.length===0)return;this.buildType="hotUpdate",this.jsRuntime.clearCache(),this.progress.setTotal(8),this.console.log(`Dash is starting to update ${e.length} files...`),await this.includedFiles.load(this.dashFilePath),await this.plugins.runBuildStartHooks();const s=[];for(const u of e){let l=this.includedFiles.get(u);l||([l]=await this.includedFiles.add([u])),s.push(l)}this.progress.advance();const i=[];for(const u of s)i.push(new Set([...u.requiredFiles]));this.progress.advance(),await this.loadFiles.run(s),this.progress.advance();for(let u=0;u<s.length;u++){const l=s[u];[...l.requiredFiles].filter(d=>!i[u].has(d)).forEach(d=>this.includedFiles.query(d).forEach(y=>y.addUpdateFile(l))),[...i[u]].filter(d=>!l.requiredFiles.has(d)).forEach(d=>this.includedFiles.query(d).forEach(y=>y.removeUpdateFile(l)))}this.progress.advance();const r=new Set(s.map(u=>[...u.filesToLoadForHotUpdate()]).flat());this.console.log(`Dash is loading ${r.size} files...`),await this.loadFiles.run([...r.values()].filter(u=>!s.includes(u))),this.progress.advance();const o=new Set(s.map(u=>[...u.getHotUpdateChain()]).flat());for(const u of r)u.isDone||(u.data=(a=await this.plugins.runTransformHooks(u))!=null?a:u.data,o.has(u)||(u.isDone=!0));this.progress.advance(),this.console.log(`Dash is compiling ${o.size} files...`),await this.fileTransformer.run(o,!0),await this.loadFiles.awaitAllFilesCopied(),this.progress.advance(),await this.plugins.runBuildEndHooks(),t&&await this.saveDashFile(),this.includedFiles.resetAll(),this.console.log(`Dash finished updating ${o.size} files!`),this.progress.advance()}async compileFile(e,t){var o;if(!this.isCompilerActivated)return[[],t];this.buildType="fileRequest",this.jsRuntime.clearCache(),this.progress.setTotal(7),await this.plugins.runBuildStartHooks(),await this.includedFiles.load(this.dashFilePath);let s=this.includedFiles.get(e);s||([s]=await this.includedFiles.add([e])),s.setFileHandle({getFile:async()=>new File([t],$.basename(e))}),await this.loadFiles.loadFile(s,!1),this.progress.advance();const i=s.filesToLoadForHotUpdate();await this.loadFiles.run([...i.values()].filter(a=>s!==a),!1),this.progress.advance();for(const a of i)a.isDone||(a.data=(o=await this.plugins.runTransformHooks(a))!=null?o:a.data);this.progress.advance();const r=await this.fileTransformer.transformFile(s,!0,!0);return this.progress.advance(),await this.includedFiles.load(this.dashFilePath),this.progress.advance(),await this.plugins.runBuildEndHooks(),[[...i].map(a=>a.filePath),r]}async unlinkMultiple(e,t=!0,s=!1){if(!this.isCompilerActivated||e.length===0)return;const i=[];for(const r of e)await this.unlink(r,!1,s).catch(o=>i.push(o));if(i.length>0)throw i[0];t&&await this.saveDashFile()}async unlink(e,t=!0,s=!1){if(!this.isCompilerActivated)return;const i=await this.getCompilerOutputPath(e);!i||i===e||(s||(await this.plugins.runBeforeFileUnlinked(e),this.includedFiles.remove(e)),await this.outputFileSystem.unlink(i),t&&await this.saveDashFile())}async rename(e,t){!this.isCompilerActivated||(await this.unlink(e,!1),await this.updateFiles([t],!1),await this.saveDashFile())}async getCompilerOutputPath(e){var i,r;if(!this.isCompilerActivated)return;const t=(i=this.includedFiles.get(e))!=null?i:new D(this,e);if(t&&t.outputPath!==e)return(r=t.outputPath)!=null?r:void 0;const s=await this.plugins.runTransformPathHooks(t);if(!!s)return s}async getFileMetadata(e){if(!this.isCompilerActivated)return;const t=this.includedFiles.get(e);return t?t.getAllMetadata():null}async getFileDependencies(e){if(!this.isCompilerActivated)return[];await this.includedFiles.load(this.dashFilePath);const t=this.includedFiles.get(e);return t?[...t.filesToLoadForHotUpdate()].map(s=>s.isVirtual?s.outputPath:s.filePath).filter(s=>s!==null&&s!==e):[]}async saveDashFile(){await this.includedFiles.save(this.dashFilePath)}async compileIncludedFiles(e=this.includedFiles.all()){this.console.time("Loading files..."),await this.loadFiles.run(e),this.console.timeEnd("Loading files..."),this.progress.advance(),this.console.time("Resolving file order...");const t=this.fileOrderResolver.run(e);this.console.timeEnd("Resolving file order..."),this.progress.advance(),this.console.time("Transforming files..."),await this.fileTransformer.run(t),this.console.timeEnd("Transforming files..."),this.progress.advance(),await this.loadFiles.awaitAllFilesCopied()}async compileAdditionalFiles(e,t=!0){const s=await this.includedFiles.add(e,t);this.progress.addToTotal(3),s.forEach(i=>i.reset()),await this.compileIncludedFiles(s)}}class Je{async allFiles(e){const t=[],s=await this.readdir(e);for(const{name:i,kind:r}of s)r==="directory"?t.push(...await this.allFiles($.join(e,i))):r==="file"&&t.push($.join(e,i));return t}async directoryHasAnyFile(e){return(await this.readdir(e).catch(()=>[])).length>0}async copyFile(e,t,s=this){const i=await this.readFile(e);await s.writeFile(t,new Uint8Array(await i.arrayBuffer()))}async writeJson(e,t,s=!0){await this.writeFile(e,JSON.stringify(t,null,s?"	":0))}async readJson(e){const t=await this.readFile(e);try{return await P.default.parse(await t.text())}catch{throw new Error(`Invalid JSON: ${e}`)}}watchDirectory(e,t){console.warn("Watching a directory for changes is not supported on this platform!")}}Object.defineProperty(j,"initRuntimes",{enumerable:!0,get:function(){return x.initRuntimes}}),j.Command=q,j.Component=X,j.Console=Z,j.Dash=We,j.DefaultConsole=ee,j.FileSystem=Je,Object.defineProperty(j,"__esModule",{value:!0}),j[Symbol.toStringTag]="Module"});
